@model Ramp.Contracts.ViewModel.Assign_UnAssignPlaybooksAndTests
@using Common.Web
@using Web.UI.Code.AreaReferencesManagement
@using System.Threading
@using Web.UI.Code.Extensions

@{
    if (Thread.CurrentPrincipal.IsInGlobalAdminRole())
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else 
    {
        Layout = "~/Views/Shared/_LayoutStandardUser.cshtml";
    }
    ViewBag.Title = "OnRAMP Online Training Platform";
}
@section scripts{
    @Scripts.Render(ManageTrainingGuidesScripts.Assign_UnAssignPlaybooksAnsTests)
    @Styles.Render(ManageTrainingGuidesStyles.Assign_UnAssignPlaybooksAnsTests)
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-info">
            <div class="panel-heading">
                Assign/Un-Assign Test
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <!-- ko if:details.ViewMode() == 0 -->
                    <label class="heading">Please select a Playbook to query:</label>
                    <select class="heading dropdownList form-control" data-bind="options: details.TrainingGuideDropDown,
                                       optionsText: 'Text',
                                       optionsValue:'Value',
                                       value:chosenPlaybook"></select>
                    <!-- /ko -->
                    <!-- ko if:details.ViewMode() == 1-->
                    <label class="heading">Please select a Test to query:</label>
                    <select class="heading dropdownList form-control" data-bind="options: details.TrainingTestDropDown,
                                       optionsText: 'Text',
                                       optionsValue:'Value',
                                       value:chosenTest"></select>
                    <!-- /ko -->
                </div>
            </div>
        </div>
        <!-- ko if : details.ManagableUsers() -->
        <div class="panel panel-info">
            <div class="panel-body">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Search Users" data-bind="textInput:search" />
                </div>
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th class="center">Playbook</th>
                            <!-- ko if: $root.TrainingGuideHasLinkedTest() -->
                            <th class="center">Test</th>
                            <!-- /ko -->
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: filteredUsers()">
                        <tr>
                            <td data-bind="text:User.Name"></td>
                            <td class="center"><input type="checkbox" data-bind="checked:AssignedTrainingGuide,click:$root.AssignTrainingGuide.bind($data)" /></td>
                            <!-- ko if: $root.TrainingGuideHasLinkedTest() -->
                            <!-- ko ifnot: PassedTest -->
                            <td class="center"><input class="dt-center" type="checkbox" data-bind="checked:AssignedTrainingTest,click:$root.AssignTrainingTest.bind($data)" /></td>
                            <!-- /ko -->
                            <!-- ko if: PassedTest -->
                            <td class="center"><input class="dt-center" type="checkbox" disabled data-bind="checked:AssignedTrainingTest,click:$root.AssignTrainingTest.bind($data)" /></td>
                            <!-- /ko -->
                            <!-- /ko -->
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <!-- /ko -->
    </div>
</div>
<script>
    var vm = new Controller(app, @Html.ToJson((object)Model),null,{
        Assign_UnAssignPlaybooks : '@Url.Action("Assign_UnAssignPlaybooks","ManageTrainingGuides",new {Area = "ManageTrainingGuides"})',
        Assign_UnAssignTests : '@Url.Action("Assign_UnAssignTests","ManageTrainingTests",new { Area = "ManageTrainingTests"})',
        Assign_UnAssignPlaybookToUser : '@Url.Action("Assign_UnAssignPlaybookToUser", "ManageTrainingGuides", new { Area = "ManageTrainingGuides" })',
        Assign_UnAssignTestToUser : '@Url.Action("Assign_UnAssignTestToUser", "ManageTrainingTest",new { Area = "ManageTrainingTest"})'});
    ko.applyBindings(vm,document.getElementsByTagName('body')[0]);
    window.vm = vm;
</script>