@using Domain.Enums
@using Ramp.Security.Authorization
@using Ramp.Contracts.ViewModel
@using System.Threading
@using Web.UI.Code.Extensions

@model CompanyUserViewModel
@{
    if (Thread.CurrentPrincipal.IsInGlobalAdminRole() || Thread.CurrentPrincipal.IsInResellerRole())
    {
        Layout = "../../../../Views/Shared/_Layout.cshtml";
    }
    else if (Thread.CurrentPrincipal.IsInAdminRole())
    {
        Layout = "../../../../Views/Shared/_LayoutStandardUser.cshtml";
    }
    ViewBag.Title = "OnRAMP Online Training Platform";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Customer Company Management</h1>
        <br />
        @Html.Partial("_AddOrUpdateCustomerCompanyUser", Model)
        <br />
        <div class="panel panel-info">
            <div class="panel-heading"> @Model.CompanyName Users <a class="pull-right" style="cursor:pointer" onclick="downloadReport('@Url.Action("DownloadEXCEL", "CustomerCompanyUserExport", new { Area = "Reporting", CompanyId = Model.CompanyId })')"><b><u>Export To Excel</u></b></a></div>
            <div class="panel-body">
                <div class="table-responsive">
                    <div id="dataTables-example_wrapper" class="dataTables_wrapper form-inline" role="grid">
                        <table id="dataTables-example" class="table table-striped table-bordered table-hover dataTable no-footer" aria-describedby="dataTables-example_info">
                            <thead>

                                <tr role="row">
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 185px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Full Name
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 185px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Email Address
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 185px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Mobile Number
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 185px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Roles
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 185px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Group
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 100px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Status
                                    </th>
                                    @*<th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 270px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Account has expired
                                    </th>*@
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 185px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Options
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    foreach (UserViewModel item in Model.UserList)
                                    {
                                        <tr class="gradeA odd">
                                            <td class="">
                                                @Html.DisplayFor(modelItem => item.FullName)
                                            </td>
                                            <td class="">
                                                @Html.DisplayFor(modelItem => item.EmailAddress)
                                            </td>
                                            <td class="">
                                                @Html.DisplayFor(modelItem => item.MobileNumber)
                                            </td>
                                            @if (item.RoleName == "Managing Admin")
                                            {
                                                <td class="" title="@String.Join(Environment.NewLine, item.Roles.Select(r => r.Description))">
                                                    @Html.DisplayFor(modelItem => item.RoleName)
                                                </td>
                                            }
                                            else
                                            {
                                                <td class="">
                                                    @Html.DisplayFor(modelItem => item.RoleName)
                                                </td>
                                            }
                                            <td class="">
                                                @Html.DisplayFor(modelItem => item.GroupName)
                                            </td>
                                            <td class="">
                                                @Html.CheckBoxFor(modelItem => item.Status, new { @Id = "item_status_" + item.Id, @class = "UserStatus" })
                                            </td>

                                            @*@if (item.RoleName == "Customer Standard User")
                                            {
                                                <td class="">
                                                    @Html.CheckBoxFor(modelItem => item.IsUserExpire, new { @Id = "item_status_" + item.Id, @class = "UserExpireStatus" })
                                                </td>

                                            }
                                            else
                                            {
                                                <td class="">
                                                    @Html.CheckBoxFor(modelItem => item.IsUserExpire, new { @Id = "item_status_" + item.Id, @class = "UserExpireStatus" })
                                                </td>
                                            }*@

                                            <td class="tooltip-demo">
                                                <a href="@(Url.Content("~/CustomerManagement/CustomerMgmt/CustomerCompanyUser?companyId=" + Model.CompanyId + "&userId=" + item.Id + "&companyName=" + Model.CompanyName))"
                                                   class="btn btn-circle" data-toggle="tooltip" data-placement="top" title="Edit">
                                                    <img src="@(Url.Content("~/Content/images/btnEdit.png"))" id="center-button" class="img-circle" />
                                                </a>
                                                <a href="javascript:void(0)"
                                                   onclick="confirmDelete(this)" id="@(item.Id)" class="btn btn-warning btn-circle" data-toggle="tooltip" data-placement="top" title="Delete">
                                                    <img src="@(Url.Content("~/Content/images/btnDelete.png"))" id="center-button" class="img-circle" />
                                                </a>
                                                <button type="button" class="btn btn-success btn-circle" title="Change Password" data-toggle="modal" data-target="#myModal" onclick="setUserId('@(item.Id)');">
                                                    <img src="@(Url.Content("~/Content/images/btnPassword.png"))" id="center-button" class="img-circle" />
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_ChangePasswordPartial", new ChangePasswordViewModel())

<script type="text/javascript" language="javascript">
    $(function () {
        $('.tooltip-demo').tooltip({
            selector: "[data-toggle=tooltip]",
            container: "body"
        });
        $('#dataTables-example').dataTable({
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    if ($(column.header()).html().trim() === 'Roles') {
                        var select = $('<select><option value=""></option></select>')
                            .appendTo($(column.header()))
                            .on('click',
                                function (e) {
                                    e.stopPropagation();
                                })
                            .on('change',
                                function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );

                                    column
                                        .search(val ? '^' + val + '$' : '', true, false)
                                        .draw();
                                });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>');
                        });
                    }
                });
            }
        });
    });

    function confirmDelete(element) {
        var userId = $(element).attr('Id');
        bootbox.confirm("Do you really want to delete this User?", function (result) {
            var urlToHit = "DeleteCustomerCompanyUser?userId=" + userId;
            if (result) {
                $.ajax({
                    type: "POST",
                    url: urlToHit,
                    data: { userId: userId },
                    success: function (data) {
                        notif({
                            msg: "<b>Success :</b> Customer User deleted.",
                            type: "success",
                        });
                        window.location.reload();
                    },
                    error: function (data) {
                    }
                });
            }
        });
    }

    function setUserId(id) {
        document.getElementById('hdUserId').value = id;
    }

    $('.UserStatus').click(function () {
        var id = $(this).attr('id').split('_')[2];
        var status = $(this).is(":checked");
        var actionUrl = "ChangeCompanyUserStatus?userId=" + id + "&status=" + status + "";
        $.ajax({
            type: "POST",
            url: actionUrl,
            data: {},
            success: function (data) {
            },
            error: function (data) {
            }
        });
    });

    //$('.UserExpireStatus').click(function () {
    //    var id = $(this).attr('id').split('_')[2];
    //    var status = $(this).is(":checked");
    //    var actionUrl = "ChangeCompanyUserExpiryStatus?userId=" + id + "&status=" + status + "";
    //    $.ajax({
    //        type: "POST",
    //        url: actionUrl,
    //        data: {},
    //        success: function (data) {
    //        },
    //        error: function (data) {
    //        }
    //    });
    //});
    function downloadReport(url) {
        var request = new XMLHttpRequest();
        request.open("GET", url);
        request.responseType = 'blob';
        request.onload = function () {
            var userAgent = window.navigator.userAgent;
            var allowBlob = userAgent.indexOf('Chrome') > -1 || userAgent.indexOf('Firefox') > -1;
            if (!allowBlob) {
                window.navigator.msSaveBlob(this.response,
                    this.getResponseHeader('filename') || "download-" + $.now());
            } else {
                var url = window.URL.createObjectURL(this.response);
                var a = document.createElement("a");
                document.body.appendChild(a);
                a.href = url;
                a.download = this.getResponseHeader('filename') || "download-" + $.now();
                a.click();
                window.setTimeout(function () { document.body.removeChild(a); }, 500);
            }
        }
        request.onreadystatechange = function () {
            if (this.readyState === 4) {
                $('#LoadingImageDiv').hide();
            }
        }
        $('#LoadingImageDiv').show();
        request.send();
    }
</script>