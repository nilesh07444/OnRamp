@using System.Text
@using Web.UI.Code.Extensions
@using Ramp.Contracts.ViewModel
@using Ramp.Security.Authorization
@using Web.UI.Areas.ManageTrainingGuides.Controllers
@model Ramp.Contracts.ViewModel.TrainingGuideViewModelLong

@{
    Layout = "../../../../Views/Shared/_LayoutStandardUser.cshtml";
    ViewBag.Title = "OnRAMP Online Training Platform";
    ViewBag.HelpContext = "10";
    var offset = ViewBag.Usage - Model.TraningGuideViewModelList.Count;
}

<style type="text/css">
    div.hopscotch-bubble .hopscotch-bubble-close {
        top: -2px !important;
        right: 5px !important;
    }

    div.hopscotch-bubble .hopscotch-bubble-number {
        padding: 0px !important;
    }
</style>

<input id="alwaysFetch" type="hidden" />

<br />
<br />
<br />
<div class="pull-left">
    <input type="button" class="btn  btn-outline btn-default" value="Create New Playbook" id="createGuideId" onclick="createTreainingGuide()" />
    <input type="hidden" value="@ViewBag.ExpiryDate" id="expiryDate" />
    <input type="hidden" value="@ViewBag.ProvisionalCompany" id="provisionalCompany" />
    <input type="hidden" value="@ViewBag.ProvCompanyCntNo" id="provCompanyCntNo" />
</div>
<br />
<br />
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-info">
            <div class="panel-heading">
                My Playbook Library
                <div class="hidden-xs pull-right">
                    <div class="btn-group" id="playbookLimitId">
                        <input type="hidden" readonly id="usage" value="@Model.TraningGuideViewModelList.Count" />
                        <input type="hidden" readonly id="total" value="@ViewBag.Total" />
                        <input type="hidden" readonly id="offset" value="@offset" />
                        <span id="playbookLimitMessage"></span>
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    <div id="dataTables-example_wrapper" class="dataTables_wrapper form-inline" role="grid">
                        <table id="dataTables-example" class="table table-striped table-bordered table-hover dataTable no-footer" aria-describedby="dataTables-example_info">

                            <thead>
                                <tr role="row">
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column ascending" id="refId">
                                        Ref Id
                                    </th>
                                    <th class="Sorting" id="Sorting" tabindex="0" aria-controls="dataTables-example" style="width:200px" rowspan="1" colspan="1"aria-label="Rendering engine: activate to sort column ascending">
                                        Title
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column ascending">
                                        Description
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" style="width: 100px;" colspan="1" aria-label="Rendering engine: activate to sort column ascending">
                                        Category
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 100px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Last Edited
                                    </th>
                                    <th class="" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 100px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Status
                                    </th>
                                    <th class="Options" id="Options" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" style="width: 205px;" aria-label="Rendering engine: activate to sort column ascending">
                                        Options
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.TraningGuideViewModelList)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ReferenceId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>@Html.DisplayFor(m => item.Category.CategorieTitle)</td>
                                        <td>
                                            @{
                                                if (item.LastEditDate.HasValue)
                                                {
                                                    var date = item.LastEditDate.Value.ToShortDateString();
                                                    @Html.DisplayFor(modelItem => date);
                                                }
                                                else
                                                {

                                                    @Html.DisplayFor(modelItem => item.CreatedOn);
                                                }
                                            }
                                        </td>
                                        <td class="">
                                            @Html.CheckBoxFor(modelItem => item.IsActive, new { @Id = "item_status_" + item.TrainingGuidId, @class = "TrainingGuidStatus" })
                                            @Html.Label("Published")
                                        </td>
                                        <td class="tooltip-demo">
                                            <a class="action" href="@(Url.Content("~/ManageTrainingGuides/ManageTrainingGuides/EditTrainingGuide?trainingGuideId=" + item.TrainingGuidId))"
                                               data-toggle="tooltip" data-placement="top" title="Edit" id="editButtonId">
                                                <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.Edit],true)" class="img-circle"/>
                                            </a>
                                            <a  onclick="confirmDelete(this)" id="@(item.TrainingGuidId)" class="action deleteBookButtonId" data-toggle="tooltip" data-placement="top" title="Delete">
                                                <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.Delete],true)" class="img-circle" />
                                            </a>
                                            <a href="@(Url.Content("~/PlayBook/" + item.ReferenceId))"
                                               class="action" data-toggle="tooltip" data-placement="top" title="Preview" id="previewbookButtonId">
                                                <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.ViewPlaybook],true)" class="img-circle" />
                                            </a>
                                            <a onclick="confirmDuplicate(this)" id="duplicate" data-id="@(item.TrainingGuidId)"
                                               class="action" data-toggle="tooltip" data-placement="top" title="Duplicate">
                                                <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.DuplicatePlaybook],true)" class="img-circle" />
                                            </a>
                                            @if (item.IsTestCreated)
                                            {
                                                <a href="@(Url.Content("~/ManageTrainingTest/ManageTrainingTest/TakeTrainingTest?trainingTestId=" + item.TrainingTestId))" 
                                                    class="action" data-toggle="tooltip" data-placement="top" title="View Test" id="viewTestButtonId">
                                                        <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.ViewPublishedTest],true)" class="img-circle" />
                                                </a>
                                            }
                                            else
                                            {
                                                <a href="@(Url.Content("~/ManageTrainingTest/ManageTrainingTest/Create?trainingGuideId=" + item.TrainingGuidId))"
                                                   class="action" data-toggle="tooltip" data-placement="top" title="Create Test" id="createTestButtonId">
                                                    <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.CreateTest],true)" class="img-circle" />
                                                </a>
                                            }
                                            @if (Html.CanAccess<ManageTrainingGuidesController>(a => a.AddUsersToCollaborationList(null)))
                                            {

                                                var users = new StringBuilder();
                                                item.Collaborators.ForEach(c => users.AppendFormat("{0};", c.Id));
                                                <a class="action" style="background: transparent" data-toggle="tooltip" data-placement="top" title="Collaborate" id="collaborate" onclick="ToggleCollaborateModal(this)" data-users="@users.ToString()">
                                                    <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.Collaborate],true)" class="img-circle" />
                                                </a>
                                            }
                                            @if (item.Feedback.Count() > 0)
                                            {
                                                <a href="@(Url.Content("~/ManageTrainingGuides/ManageTrainingGuides/Feedback?id=" + item.ReferenceId))"
                                                   class="action" data-toggle="tooltip" data-placement="top" title="Feedback @(item.UnreadFeedback > 0 ? " (" + item.UnreadFeedback.ToString() + ")" : "")" id="feedbackButtonId">
                                                    <img src="@(Url.Content((item.UnreadFeedback == 0) ? (item.Feedback.Count() > 0 ? Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.Feedback],true) : "~/Content/images/btnfeedback.png") : @Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.FeedbackUnread], true)))" class="img-circle" />
                                                </a>
                                            }
                                            <a class="action b_print" href="javascript:void(0)" name="@item.TrainingGuidId" onclick="printActivate('@item.TrainingGuidId')" data-toggle="tooltip" data-placement="top" title="Print" id="print">
                                                <img src="@Url.GetImageFromId(PortalContext.Current.Icons[Domain.Models.IconType.Print],true)" class="img-circle" />
                                            </a>
                                        </td>
                                    </tr>
                                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.Hidden("NewGuideCreate", (string)TempData["NewGuideCreate"], new { id = "NewGuideCreate" })
</div>
<div id="collaborateModal" class="modal" role="dialog" style="overflow:auto">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #555555; color: white;text-align: center">
                <button type="button" style="color:white" class="close" onclick="return ToggleCollaborateModal()">&times;</button>
                <h3 class="modal-title">Playbook Collaboration</h3>
            </div>
            <div class="modal-body">
                <p>Please select the content creators that you would like to collaborate with for the selected playbook.</p>
                <div class="table-responsive">
                    <div id="collaborateUserTable_wrapper" class="dataTables_wrapper form-inline" role="grid">
                        <table id="collaborateUserTable" class="table table-striped table-bordered table-hover dataTable no-footer">
                            <thead>
                                <tr>
                                    <th>Full Name</th>
                                    <th>Email</th>
                                    <th>Collaborator</th>
                                </tr>
                            </thead>
                            @foreach (var collaborator in Model.AllCollaborators)
                            {
                                var username = collaborator.FirstName + collaborator.LastName;
                                <tr>
                                    <td>@username</td>
                                    <td>@collaborator.EmailAddress</td>
                                    @if (collaborator.Id.Equals(SessionManager.GetCurrentlyLoggedInUserId()))
                                    {
                                        <td><input type="checkbox" value="@collaborator.Id" onchange="AddRemoveUserToCollobaoratedList(this)" locked="locked" /></td>
                                    }
                                    else
                                    {
                                        <td><input type="checkbox" value="@collaborator.Id" onchange="AddRemoveUserToCollobaoratedList(this)" /></td>
                                    }
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default btn-outline" onclick="return SubmitCollaborationRequest()">Collaborate</button>
                <button class="btn btn-default btn-outline" onclick="return ToggleCollaborateModal()">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div id="print-modal" class="modal fade" tabindex="-1" role="dialog" name="">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header modal-header-custom">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Export</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" id="print-modal-submit" class="btn btn-primary">Print</button>
                <button type="button" id="download-modal-submit" class="btn btn-primary">Download</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/Areas/ManageTrainingGuides/Index.js"></script>
<script>
    //setTimeout(function () {
    //    var el = document.getElementById('alwaysFetch');
    //    el.value = el.value ? location.reload() : true;
    //}, 0);
</script>
<script type="text/javascript" charset="utf-8">
    $(document).ready(function() {
        $('[data-toggle=tooltip]').tooltip();
        $('#dataTables-example').dataTable({
            language: {
                zeroRecords: 'You have no Playbooks in your library'
            }
        });
       
        $('#collaborateUserTable').dataTable({
            language: {
                zeroRecords: 'No other content creator users available to collaborate with'
            }
        });
        $('#collaborateUserTable').on('draw.dt', function () {
            AddColaboratingUsers($('#collaborate'));
        });
        updateUsage();
      
        $('#print-modal-submit').on('click', print);
        $('#download-modal-submit').on('click', zip);
        $('#print-modal').on('hide.bs.modal', function () {
            $('#print-modal').attr('name', '');
            $('#print_highlight_correct_answer').prop('checked', false);
        });
    });
    function SubmitCollaborationRequest() {
        var command = new Object();
        command.UserViewModelList = new Array();
        var j;
        for (j = 0; j < Collaborators.length; j++) {
            if (Collaborators[j] !== "") {
                command.UserViewModelList.push({ Id: Collaborators[j] });
            }
        }
        command.TrainingGuideViewModel = { ReferenceId: SelectedGuideReferenceId };

        doAJAXAddColoaboratorRequest(command);

    }
    function doAJAXAddColoaboratorRequest(command) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddUsersToCollaborationList","ManageTrainingGuides","ManageTrainingGuides")",
            data: { command: command },
            start : function(data) {
                $('#LoadingImageDiv').show();
            },
            success: function (data) {
                $('#LoadingImageDiv').hide();
                if (data.Success === 'True') {
                    notif({
                        msg: "<b>Success :</b> Collaborators successfully updated.",
                        type: "success"
                    });
                    $('#collaborateModal').find('input').each(function () {
                        if ($(this).attr('type') === 'checkbox') {
                            $(this).prop('checked', false);
                        }
                    });
                    ToggleCollaborateModal();
                    window.setTimeout(function() {
                        window.location.href = "@Url.Action("Index","ManageTrainingGuides", "ManageTrainingGuides")";
                    }, 2000);
                } else {
                    notif({
                        msg: "<b>Error :</b> Something went wrong.",
                        type: "error"
                    });
                }
            },
            done:function(data) {
                $('#LoadingImageDiv').hide();
            }
        });
    }
    function confirmDuplicate(element) {
        var row = $(element).parent().parent();
        var trainingGuideId = $(element).attr('data-id');
        updateUsage();
        if($('#usage').val() >= @Model.MaxGuide)
            notif({msg: "Playbook limit reached, please contact supplier", type: "error"});
        else{
            bootbox.confirm("Duplicate this Playbook?", function (result) {
                var urlToHit = "@(Url.Action("Duplicate", "ManageTrainingGuides", "ManageTrainingGuides"))";
                urlToHit = urlToHit.replace('?Length=20','');
                if (result) {
                    $('#LoadingImageDiv').show();
                    $.ajax({
                        type: "POST",
                        url: urlToHit + '?id=' + trainingGuideId,
                        success: function(data) {
                            $('#LoadingImageDiv').hide();
                            notif({
                                msg: "<b>Success :</b> Playbook Duplicated.",
                                type: "success",
                            });
                            window.location.reload();
                        },
                        error: function(data) {
                            $('#LoadingImageDiv').hide();
                            notif({
                                msg: "<b>Error :</b> Please try again.",
                                type: "error",
                            });
                        }
                    });
                }
            });
        }
    }
    function confirmDelete(element) {
        var row = $(element).parent().parent();
        var trainingGuideId = $(element).attr('Id');
        var page = $('#dataTables-example').DataTable().page();
        bootbox.confirm("Do you really want to delete this Playbook?", function(result) {
            $('#LoadingImageDiv').show();
            var urlToHit = "@(Url.Action("Delete", "ManageTrainingGuides", "ManageTrainingGuides"))";
            if (result) {
                $.ajax({
                    type: "POST",
                    url: urlToHit,
                    data: { id: trainingGuideId },
                    success: function(data) {
                        $('#dataTables-example').DataTable().rows(row).remove();
                        if(page <= $('#dataTables-example').DataTable().page.info().pages -1 ){
                            $('#dataTables-example').DataTable().page(page).draw(false)
                        }else{
                            $('#dataTables-example').DataTable().draw();
                        }
                        $('#LoadingImageDiv').hide();
                        notif({
                            msg: "<b>Success :</b> Playbook deleted.",
                            type: "success",
                        });
                       updateUsage();

                    },
                    error: function(data) {
                        $('#LoadingImageDiv').hide();
                    }
                });
            }else{
                $('#LoadingImageDiv').hide();
            }
        });
    }
    function updateUsage() {
        if (Number.parseInt) {
            $('#usage').val(Number.parseInt($('#dataTables-example').DataTable().data().length) + Number.parseInt($('#offset').val()));
        } else {
            $('#usage').val(parseInt($('#dataTables-example').DataTable().data().length) + parseInt($('#offset').val()));
        }
        $('#total').val(@Model.MaxGuide);
        var msg = "You're Utilizing " + $('#usage').val() + "/" + $('#total').val() + " Playbooks";
        $('#playbookLimitMessage').html(msg);
    }
    function createTreainingGuide() {
        @{ 
            var categoryError = ViewBag.CategoryError != null && Convert.ToBoolean(ViewBag.CategoryError);
        }
        if ('@categoryError' == 'True') {
            notif({
                msg: "Please Create Playbook Categories",
                type: "error",
                multiline : true
            });
        } else {
            updateUsage();
            var val = $('#usage').val();
            if (val >= @Model.MaxGuide)
                notif({
                    msg: "Playbook limit reached, please contact supplier",
                    type: "error"
                });
            else {
                window.location.href = '@Url.Action("Create", "ManageTrainingGuides")';
            }
        }
    }

    //   ManageTrainingGuides
    $('.TrainingGuidStatus').click(function() {
        var id = $(this).attr('id').split('_')[2];
        var status = $(this).is(":checked");
        var actionUrl = "@(Url.Action("ChangeTrainingGuideStatus", "ManageTrainingGuides", "ManageTrainingGuides"))?trainingGuidId=" + id + "&status=" + status + "";
        //"ChangeTrainingGuideStatus?trainingGuidId=" + id + "&status=" + status + "";
        $.ajax({
            type: "POST",
            url: actionUrl,
            data: { trainingGuidId: id, status: status },
            success: function(data) {
            },
            error: function(data) {
            }
        });
    });
</script>

<script type="text/javascript">
    tour.steps= [
            {
                target: 'createGuideId',
                title: 'Create new Playbook',
                content: 'Click here to create a new Playbook using the Playbook builder',
                placement: 'top',
                xOffset: 'center',
                arrowOffset: 'center',
                width: 200
            },
            {
                target: 'playbookLimitId',
                title: 'Playbook package utilization',
                content: 'This section indicates how many Playbooks you are presently using in your bundle. Contact the OnRAMP support team if you require more Playbooks.',
                placement: 'top',
                xOffset: 'center',
                arrowOffset: 'center',
                width: 200
            },
            {
                target: 'Sorting',
                placement: 'top',
                title: 'Sorting Records',
                content: 'You can click on the column headings to sort the list of Playbooks.',
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'sb_tb',
                placement: 'top',
                title: 'Search Box',
                content: 'Click here to search for keywords in your Playbook titles and descriptions to quickly locate specific content.',
                xOffset: 'center',
                arrowOffset: 'center',
                multiLine : true,
                width: 200
            },
            {
                target: 'Options',
                placement: 'top',
                title: 'Playbook Options',
                content: 'Here you can Edit, Delete and Preview a PlayBook.',
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'refId',
                placement: 'top',
                title: 'Ref ID',
                content: 'Each playbook has a Reference ID so make it unique to other Playbooks.',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'editButtonId',
                placement: 'top',
                title: 'Edit Playbook',
                content: 'Click here to edit the Playbook.',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'

            }
            ,
            {
                target: 'deleteBookButtonId',
                placement: 'top',
                title: 'Delete Playbook',
                content: 'Click here to delete the Playbook.',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'previewbookButtonId',
                placement: 'top',
                title: 'Preview Playbook',
                content: 'Click here to preview the Playbook..',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'viewTestButtonId',
                placement: 'top',
                title: 'View Test',
                content: 'Click here to preview the Playbook Test.',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'createTestButtonId',
                placement: 'top',
                title: 'Create Tests',
                content: 'Click here to create a Test for the Playbook.',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'duplicate',
                placement: 'top',
                title: 'Duplicate',
                content: 'Click here to duplicate this Playbook.',
                multiLine: true,
                width: 200,
                xOffset: 'center',
                arrowOffset: 'center'
            },
            {
                target: 'collaborate',
                placement: 'top',
                title: 'Collaborate',
                content: 'Click here to collaborate on this Playbook with other managing administrators.',
                xOffset: 'center',
                arrowOffset: 'center',
                multiLine: true,
                width: 200
            },
            {
                target: 'print',
                placement: 'top',
                title: 'Print',
                content: 'Click here to download and print this Playbook.',
                xOffset: 'center',
                arrowOffset: 'center',
                multiLine: true,
                width: 200
            }

    ];
</script>

<script type="text/javascript">
    function ShowLoading(bool) {
        if (bool) {
            $('#LoadingImageDiv').css('z-index', 1060);
            $('#LoadingImageDiv').show();
        }
        else {
            $('#LoadingImageDiv').hide();
        }
    }
    $("#playbookLimitId").hover(
        function () {
            var date = $('#expiryDate').val();
            var provCompany = $('#provisionalCompany').val();
            var provCompanyCntNo = $('#provCompanyCntNo').val();
            //$(this).css("color", "#27B899");
            $(this).tooltip({
                'show': true,
                'placement': 'top',
                'title': "Your account will expire on : " + date + ", To extend your usage please contact your provisional partner " + provCompany + ", on " + provCompanyCntNo ,

            });

            $(this).tooltip('show');

        },
        function () {
            $(this).css("color", "");
        }
    );
     function printActivate(event) {
        $('#print-modal').attr('name', event);
        $('#print-modal').modal('show');
    }
    function print() {
        var url = '@Url.Action("DownloadPDF", "TrainingGuideExport", new { Area = "Reporting" })';
        var query = {
            TrainingGuideId: $('#print-modal').attr('name')
        };
        if (!query.TrainingGuideId) {
            notif({
                msg: 'Something Went Wrong, please try again',
                type: 'error'
            });
            return;
        }
        url = url + '?' + $.param(query);
        downloadReport(url);
    }
     function zip() {
        var url = '@Url.Action("Zip", "TrainingGuideExport", new { Area = "Reporting" })';
        var query = {
            TrainingGuideId: $('#print-modal').attr('name')
        };
        if (!query.TrainingGuideId) {
            notif({
                msg: 'Something Went Wrong, please try again',
                type: 'error'
            });
            return;
        }
        url = url + '?' + $.param(query);
        downloadReport(url);
    }
     function downloadReport(url) {
         ShowLoading(true);
        var request = new XMLHttpRequest();
        request.open("GET", url);
        request.responseType = 'blob';
        request.onload = function () {
            ShowLoading(false);
            $('#print-modal').modal('hide');
            var userAgent = window.navigator.userAgent;
            var allowBlob = userAgent.indexOf('Chrome') > -1 || userAgent.indexOf('Firefox') > -1;
            if (!allowBlob) {
                window.navigator.msSaveBlob(this.response,
                    this.getResponseHeader('filename') || "download-" + $.now());
            } else {
                var url = window.URL.createObjectURL(this.response);
                var a = document.createElement("a");
                document.body.appendChild(a);
                a.href = url;
                a.download = this.getResponseHeader('filename') || "download-" + $.now();
                a.click();
                window.setTimeout(function () { document.body.removeChild(a); }, 500);
            }
        }
        request.send();
    }
</script>
