@model Ramp.Contracts.ViewModel.PolicyModel
@using Web.UI.Controllers
@using Common.Web
@using Ramp.Security.Authorization
@using Web.UI.Code.Extensions
@using System.Threading
@{
    Layout = "../Shared/_LayoutStandardUser.cshtml";
    ViewBag.Title = "OnRAMP Online Training Platform";
    var roles = SessionManager.GetRolesForCurrentlyLoggedInUser().ToList();
    var contentApprovers = ViewBag.ContentApprovers;
    var uId = @SessionManager.GetCurrentlyLoggedInUserId().ToString();
    var DocumentApprovers = ViewBag.DocumentApprovers;
}
<link href="~/Content/Areas/Document/Edit.css" rel="stylesheet" />
<link href="~/Scripts/themes/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Scripts/themes/bootstrap-multiselect.js"></script>
<style>
    .bootstrap-tagsinput {
        max-width: none;
        width: 100%;
        margin-bottom: 0;
        padding: 0;
    }

    .errorClass {
        border: 2px solid #a94442;
    }



    .switch {
        vertical-align: middle;
        position: relative;
        display: inline-block;
        width: 2.4em;
        height: 1.4em;
    }

        .switch input {
            display: none;
        }

        .switch + span {
            vertical-align: middle;
        }


    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        -ms-transition: .4s;
        -o-transition: .4s;
        transition: .4s
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 1em;
            width: 1em;
            left: 0.2em;
            bottom: 0.2em;
            background-color: white;
            -webkit-transition: .4s;
            -ms-transition: .4s;
            -o-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider:before {
        -ms-transform: translateX(1em);
        -webkit-transform: translateX(1em);
        transform: translateX(1em);
    }

    .slider.round {
        border-radius: 0.7em;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    .arrangeHeader {
        background-color: #555;
        border-color: #bce8f1;
        text-align: center;
        width: 100%;
        border-bottom: 1px solid;
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        color: white;
        padding: 5px 10px;
    }

    .hover-zoom {
        zoom: 1;
    }

        .hover-zoom:hover {
            -ms-transition: transform .15s ease-in-out;
            -o-transition: transform .15s ease-in-out;
            -webkit-transition: transform .15s ease-in-out;
            -ms-transition: transform .15s ease-in-out;
            -o-transition: transform .15s ease-in-out;
            -webkit-transition: transform .15s ease-in-out;
            transition: transform .15s ease-in-out;
            transform: scale(1.1)
        }

    .cursor {
        cursor: pointer;
    }
</style>
@*neeraj*@
<script>
    var approverList;
    $(document).ready(function () {
        // #boot-multiselect-demo.multiselect({ })
        $('.multiselect1').multiselect({
            includeSelectAllOption: true,
            buttonWidth: 250,
            enableFiltering: true,
            maxHeight: 350
        });


    });
</script>
<script src="~/Scripts/jstree.js"></script>
<link href="~/Content/jstree/dist/themes/default/style.css" rel="stylesheet" />
<div id="blueimp-gallery" class="blueimp-gallery">
    <div class="slides"></div>
    <h3 class="title"></h3>
    <a class="prev">‹</a>
    <a class="next">›</a>
    <a class="close">×</a>
    <a class="play-pause"></a>
    <ol class="indicator"></ol>
</div>
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header"><span data-bind="text: mode"></span> Policy</h1>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="panel panel-info">
            <div class="panel-heading">Policy Detail</div>
            <div class="panel-body" data-bind="with:data">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="well">
                            <div class="form-group">
                                <label class="control-label">Title</label>
                                <input type="text" class="form-control" data-bind="textInput:Title,validatewith:$root.errors" name="Title" />
                                @*<input type="hidden" id="docUrl" name="DocumentUrl" data-bind="value: DocumentUrl" />*@
                            </div>
                            <div class="form-group">
                                <label class="control-label">Description</label>
                                <textarea name="Description" class="form-control" data-bind="textInput:Description,validatewith:$root.errors" rows="2"></textarea>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Points</label>
                                <input type="number" min="0" class="form-control" data-bind="textInput:Points,validatewith:$root.errors" name="Points" />
                            </div>
                            <div class="form-group">
                                <label class="control-label">Tags</label>
                                <div class="input-group" style="width:100%;max-width:280px">
                                    @*<input type="text" class="form-control" id="TrainingLabels" name="TrainingLabels" data-bind="value:TrainingLabels,valueUpdate:['typeahead:selected','change','keyup'], validatewith:$root.errors" />*@
                                    <select id="label-multiselect-Tags">
                                        @if (ViewBag.Labels != null)
                                        {
                                            foreach (var item in ViewBag.Labels)
                                            {
                                                <option value="@item.Id">@item.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group" data-bind="with:Category">
                                <label id="category" class="control-label">Category : <span data-bind="html:Name"></span></label>
                            </div>
                            <div class="form-group" data-bind="with:Category">
                                <button class="btn btn-default" data-bind="click:$root.category.menu.toggle.bind()">Select Category</button>
                                <!-- ko if:!ko.unwrap($root.category.menu.state.minimized) -->
                                <div data-bind="jstree:$root.category.menu.options,jstreeOptions:$root.jsTree.options,valueProperty:Id"></div>
                                <!-- /ko -->
                            </div>
                            <div class="form-group">
                                <label class="control-label">View Mode</label>
                                <div class="btn-group-sm">
                                    <button type="button" class="btn btn-default" data-bind="click:$root.previewMode.set.bind(0),css : {'btn-primary' : ko.unwrap(PreviewMode) !== 1}">Portrait</button>
                                    <button type="button" class="btn btn-default" data-bind="click:$root.previewMode.set.bind(1) ,css : {'btn-primary' : ko.unwrap(PreviewMode) === 1}">Storybook</button>
                                </div>
                            </div>
                            @if (PortalContext.Current.UserCompany.EnableGlobalAccessDocuments)
                            {
                                <div class="form-group">
                                    <label class="switch">
                                        <input type="checkbox" data-bind="checked:IsGlobalAccessed" name="IsGlobalAccessed" />
                                        <span class="slider round"></span>
                                    </label>
                                    <span>Enable global user access</span>
                                </div>
                            }
                            <div class="form-group">
                                <label id="" class="control-label">Downloadable</label>
                                <div class="btn-group-sm">
                                    <button type="button" class="btn btn-default" data-bind="click:$root.printable.set.bind(true),css : {'btn-primary' : ko.unwrap(Printable)}">Yes</button>
                                    <button type="button" class="btn btn-default" data-bind="click:$root.printable.set.bind(false) ,css : {'btn-primary' : !ko.unwrap(Printable)}">No</button>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Cover Picture</label>
                                <div data-bind="with:CoverPicture">
                                    <img class="img-responsive coverPicture" data-bind="attr:{src:$data.Url()},click:app.data.plugins.blueimpGallary.trigger.bind($data)" />
                                </div><br />
                                <button id="coverPicture" class="btn btn-default" data-bind="click:function(){ $('.coverPictureUpload').trigger('click');}">Set / Change Cover Picture</button>
                                <button class="btn btn-default" data-bind="visible:CoverPicture,click:function(){$root.data.CoverPicture(null);}"><span class="fa fa-trash"></span></button>
                                <input data-bind="fileUpload:CoverPictureUpload,fileuploadOptions:$root.upload.options.coverPicture,valueProperty:CoverPicture" type="file" name="files[]" accept="image/*" class="hidden coverPictureUpload">
                            </div>
                            <div class="form-group has-error errorsSpan" data-bind="visible:$root.UploadCoverPictureError">
                                <span>Error uploading CoverPicture</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-sm-12">
        <div class="panel-info">
            <div class="panel-body" data-bind="with:data">
                <div data-bind="foreach:ContentModels,uiSortableList:ContentModels,handle:'.handle',callback:$root.content.restore">
                    <div class="panel panel-info">
                        <div class="panel-heading handle" title="Hold and drag to rearrange" data-bind="event:{mousedown:$root.content.reorder.bind($root)}">
                            <button type="button" class="glyphicon glyphicon-sort" style="color:black" data-bind="click:$root.content.toggle.bind($data)"></button>
                            <input type="text" class="form-control chapterName" data-bind="textInput:Title" placeholder="Please enter a title..." />
                            <button class="close" data-bind="click:$root.content.remove.bind($data)">&times;</button>
                        </div>
                        <div class="panel-body" data-bind="hidden:state.minimized">

                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="well well-sm" id="chapterContent">
                                        <div class="content-tools" data-bind="contentToolsWithImageUpload:{query:'*[data-editable]',identifier:'name',value:Content},
                                                                                    imageuploader:{uploadPathInitial:$root.contentTools.postFromContentToolsInitialUrl,uploadPathCommit:$root.contentTools.postFromContentToolsCommitUrl,
                                                                                    compositeKey:ko.unwrap($root.data.Id),rotateImagePath : $root.contentTools.RotateImageUrl},
                                                                                    identifier:ko.unwrap(Id)" data-editable>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row col-lg-12">

                                <div data-bind="css: { 'col-md-12': Attachments().length > 0, 'col-md-12': Attachments().length === 0 }">
                                    <div class="form-group">
                                        <label id="resources" class="control-label">Choose any of the below to upload</label>
                                    </div>
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/wordDoc.png")" data-bind="click:vm.upload.triggerUpload.bind($data)" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/excelDoc.png")" data-bind="click:vm.upload.triggerUpload.bind($data)" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/ppDoc.png")" data-bind="click:vm.upload.triggerUpload.bind($data)" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/otherDoc.png")" data-bind="click:vm.upload.triggerUpload.bind($data)" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/audDoc.png")" data-bind="click:vm.upload.triggerUpload.bind($data)" title="Accepted filetypes: &#013; .MP3" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/imgDoc.png")" data-bind="click:vm.upload.triggerUpload.bind($data)" title="Accepted filetypes: &#013; .PNG &#013; .JPEG &#013; .JPG &#013; .GIF &#013; .BMP" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/videoDoc.png")" id="videoUploadId" data-bind="click:vm.upload.triggerUpload.bind($data)" title="Accepted filetypes: &#013; .MP4" />
                                    <img class="img-responsive uploadLauncher hover-zoom cursor" src="@Url.Content("~/Content/images/file/WebFrame.png")" data-bind="click: vm.linkModal.open.bind($data)" />

                                    <div id="inputs"></div>
                                    </br>
                                </div>
                                <div class="col-lg-10">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-condensed" data-bind="visible:ko.unwrap(Attachments).length > 0">
                                            <thead>
                                                <tr>
                                                    <th colspan="5" style="padding:0">
                                                        <label class="success arrangeHeader">File Attachments</label>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody data-bind="foreach:Attachments,uiSortableList:Attachments,handle:'.uploadhandle'">
                                                <tr data-bind="if:!ko.unwrap($data.Error)">
                                                    <td style="max-width: 50px">
                                                        <a class="btn"><span class="glyphicon glyphicon-sort uploadhandle" style="color:black"></span></a>
                                                    </td>
                                                    <td class="upload upload-detail-20">
                                                        <a data-bind="attr:{href: ko.unwrap($data.Url)},click:app.data.plugins.blueimpGallary.trigger.bind($data)" target="_blank">
                                                            <img class="img-responsive upload-thumbnail" data-bind="attr:{src:ko.unwrap($data.ThumbnailUrl)}" />
                                                        </a>
                                                    </td>
                                                    <td class="upload upload-detail-40">
                                                        <textarea type="text" class="form-control" data-bind="value:$data.Description" style="width:100%" rows="4"></textarea>
                                                    </td>
                                                    <td class="upload upload-detail-20">
                                                        <label data-bind="text:vm.upload.getScaledSize(ko.unwrap($data.Size))"></label>
                                                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0" data-bind="visible :ko.unwrap($data.InProcess)">
                                                            <div class="progress-bar progress-bar-success" data-bind="style:{width:ko.unwrap($data.Progress)}"></div>
                                                        </div>
                                                    </td>
                                                    <td class="upload upload-detail-20" style="max-width: 50px">
                                                        <div data-bind="if: ko.unwrap($data.InProcess)">
                                                            <button class="btn btn-danger upload-action" data-bind="click:vm.upload.cancel.bind($data,$parent)"><i class="glyphicon glyphicon-ban-circle"></i></button>
                                                        </div>
                                                        <div data-bind="ifnot: ko.unwrap($data.InProcess)">
                                                            <button class="btn btn-danger upload-action" data-bind="click:vm.upload.delete.bind($data,$parent)"><i class="glyphicon glyphicon-trash"></i></button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <div style="display: none" data-bind="attr: {id: 'docLinkHeader_' + $index() }" class="panel-heading success arrangeHeader"><strong>Web Frame Links</strong></div>

                                        <table class="table table-striped table-condensed">
                                            <tbody data-bind="foreach:$data.DocLinks, attr: {id: 'chapter_' + $index() }">
                                                <tr>
                                                    <td style="max-width: 50px">
                                                        <a class="btn"><span class="glyphicon glyphicon-sort uploadhandle" style="color:black"></span></a>
                                                    </td>
                                                    <td class="upload upload-detail-20">
                                                        <img class="img-responsive upload-thumbnail" src="@Url.Content("~/Content/images/file/WebFrame.png")" />

                                                    </td>
                                                    <td class="upload upload-detail-40">
                                                        &nbsp;
                                                        <input type="text" class="form-control" data-bind="value: Name, event: { input: vm.changeHandler.Name.bind() }, attr: {id: 'linkName_'+$parentContext.$index() }" style="width:100%"></input>

                                                    </td>
                                                    <td class="upload upload-detail-40">
                                                        &nbsp;
                                                        <input type="text" class="form-control" oninput="" data-bind="value: Url, event: { input: vm.changeHandler.Url.bind() }, attr: {id: 'link_'+$parentContext.$index() }" style="width:100%"></input>

                                                    </td>
                                                    <td class="upload upload-detail-20">
                                                        <span style="display: none;padding: 7px; color:red" data-bind="attr: {id: 'show_'+$parentContext.$index() }">Enter a Valid Link</span>
                                                    </td>
                                                    <td class="upload upload-detail-20" style="max-width: 50px"><a href="javascript:void(0)" data-bind="click: vm.deleteChapterUrl.bind()"> &nbsp;<button class="btn btn-danger upload-action"><i class="glyphicon glyphicon-trash"></i></button></a></td>

                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <br><br>
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <tbody data-bind="foreach:Errors" class="errors">
                                                <tr>
                                                    <td colspan="2">
                                                        <div>
                                                            <b>Error uploading file. Please try again.</b>
                                                        </div>
                                                        <div data-bind="text:app.data.utils.string.toDisplayString(ko.unwrap($data.Name),50)"></div>
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-danger upload-action uploaderror" data-bind="click:vm.upload.clearError.bind($data,$parent)"><spand class="glyphicon glyphicon-remove"></spand></button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                                <div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br>
            </div>
        </div>
    </div>
</div>
<!-- ko if:ko.unwrap($root.data.CallToAction) -->
<div class="row">
    <div class="col-sm-12">
        <div class="panel panel-info">
            <div class="panel-body" data-bind="with:$root.data">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        Call To Action Message
                        <button class="close" data-bind="click:function(){CallToAction(false);CallToActionMessage(null);}">&times;</button>
                    </div>
                    <div class="panel-body" data-bind="with:$root.data">
                        <div class="row">
                            <div class="col-sm-8">
                                <textarea name="CallToActionMessage" class="form-control" data-bind="textInput:CallToActionMessage,validatewith:$root.errors" rows="3" style="max-width:unset"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /ko -->
<div class="row">
    <div class="col-sm-12">
        <div class="custom-build-menu navbar-fixed-bottom" id="buildMenu">
            <button id="addContent" class="btn btn-default" data-bind="click:$root.content.add.bind($root.data.Chapters)">Add Chapter</button>
            <button class="btn btn-default" data-bind="click:function(){$root.data.CallToAction(true);},disable:ko.unwrap($root.data.CallToAction)">Add Call To Action</button>
            <button id="save" class="btn btn-default" data-bind="click:$root.saveExit.bind(),disable:ko.unwrap($root.saving) || ko.unwrap($root.upload.concurrentUploads).length > 0">Save And Exit</button>
            <button class="btn btn-default" data-bind="click: $root.print.bind()">Download</button>

            @if (roles.Contains(Ramp.Contracts.Security.Role.Admin.ToString()) || roles.Contains(Ramp.Contracts.Security.Role.ContentAdmin.ToString()) || roles.Contains(Ramp.Contracts.Security.Role.CustomerAdmin.ToString()) || roles.Contains(Ramp.Contracts.Security.Role.ContentApprover.ToString()))
            {
                <button class="btn btn-default" id="publish">Publish</button>
            }
            @if (roles.Contains(Ramp.Contracts.Security.Role.ContentCreator.ToString()) &&
              (Model.CreatedBy == null || Model.CreatedBy == Thread.CurrentPrincipal.GetId().ToString() || roles.Contains(Ramp.Contracts.Security.Role.CustomerAdmin.ToString()))
              )
            {
                <button class="btn btn-default checkCss" id="approval1">Submit for approval</button>
            }
            @if (
                (roles.Contains(Ramp.Contracts.Security.Role.ContentApprover.ToString())) &&
               (Model.CreatedBy != null && Model.CreatedBy != Thread.CurrentPrincipal.GetId().ToString())
                )
            {
                <button class="btn btn-default approve">Approve</button>

                <button class="btn btn-default decline">Decline</button>
            }
        </div>
    </div>
</div>
<br />

<div class="modal fade" id="myModal" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modalSearch">
                <button type="button" id="btnCancel2" class="close" data-dismiss="modal" data-bind="click: vm.linkModal.close.bind()">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">Enter web page link</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-12">


                            <p>Please enter a  link name as well as the URL in the textboxes below, ensure that your link starts with "https://"</p>

                            <p id="invalidURL" style="display: none">Enter your link here</p>


                            <br />
                            <div class="row">
                                <div class="col-lg-6">
                                    <label>Link Title</label>
                                    <input type="text" placeholder="Please enter a link title" style="min-width:100%;" class="form-control" id="inputName" name="linkName" /><br />
                                </div>
                                <div class="col-lg-12">
                                    <label>URL</label>
                                    <input type="text" placeholder="Please enter a URL" style="min-width:100%;" class="form-control" id="inputUrl" name="url" />
                                </div>

                            </div>
                            <input type="hidden" id="docChapterId" name="docChapterId" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="text-center">
                        <div class="btn-group pull-right">

                            <button class="btn btn-primary" id="btnSaveLink" data-dismiss="modal" data-bind="click: vm.getUrl.docUrl.bind()">Save</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*neeraj*@
<div class="modal fade" id="publishModal1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modalSearch">
                <button type="button" id="btnCancel4" class="close" data-dismiss="modal" data-bind="click: vm.linkModal.close.bind()">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>

                <h4 class="modal-title">Submit for Approval</h4>
            </div>
            <div class="modal-body">
                <p>Please select an approver for your document and leave an optional message</p><br />
                <div class="form-group">
                    <div class="row">

                        <div class="col-lg-12">
                            <div>
                                <label>Content Approvers</label><br>
                                <select required class="multiselect1" id="ca-multiselect" multiple="multiple">
                                    @foreach (var item in contentApprovers)
                                    {
                                        <option value="@item.Id">@item.FirstName&nbsp;@item.LastName</option>
                                    }
                                </select>
                            </div><br />
                        </div>
                        <div class="col-lg-12">
                            <label>Message</label>
                            <textarea required type="text" id="msgToApprover" placeholder="Please enter a message here" style="min-width:100%;" class="form-control">
</textarea>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="text-center">
                    <div class="btn-group pull-right">

                        <button class="btn btn-primary" id="btnSaveContentCreator" data-dismiss="modal" data-bind="enable: checkSubmitValidation()">Save</button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*content approver popup modal*@
<div class="modal fade" id="feedbackModal" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modalSearch">
                <button type="button" id="btnCancel4" class="close" data-dismiss="modal" data-bind="click: vm.linkModal.close.bind()">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">Enter a message for creator</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-12">
                            <label>Message</label>
                            <textarea type="text" id="msgToCreator" placeholder="Please enter a message here" style="min-width:100%;" class="form-control">
</textarea>

                        </div>
                        <input type="hidden" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="text-center">
                    <div class="btn-group pull-right">

                        <button class="btn btn-primary" id="declineCreatorMsg" data-dismiss="modal">Save</button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="adminPublish" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="bootbox-close-button close" data-dismiss="modal" aria-hidden="true" style="margin-top: -10px;">×</button> <div class="bootbox-body">
                    Document is pending approval <br />@if (Model.CreatedByModel
!= null)
                    {<b>Creator: </b>@Model.CreatedByModel.Name <br />
                    <b>Approvers: </b>@DocumentApprovers}
                    </b>
                </div>
            </div><div data-bind="click: $root.close('#adminPublish')" class="modal-footer"><button type="button" class="btn btn-default">Cancel</button><button type="button" class="btn btn-primary" data-bind="click: $root.adminPublishConfirm">OK</button></div>
        </div>
    </div>
</div>

<div class="modal fade" id="docAccept" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modalSearch">
                <button data-bind="click: $root.close('#docAccept')" type="button" class="close" id="close" data-dismiss=""><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Document Accept</h4>
            </div>
            <div class="modal-content"><div class="modal-body"><button type="button" class="bootbox-close-button close" data-dismiss="modal" aria-hidden="true" style="margin-top: -10px;">×</button><div class="bootbox-body">Do you want to approve document?</b></div></div><div data-bind="click: $root.close('#docAccept')" class="modal-footer"><button type="button" class="btn btn-default">Cancel</button><button type="button" class="btn btn-primary" data-bind="click: $root.documentAccept">OK</button></div></div>
        </div>
    </div>
</div>

<div class="modal fade" id="docReject" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modalSearch">
                <button data-bind="click: $root.close('#docReject')" type="button" class="close" id="close" data-dismiss=""><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Document Decline</h4>
            </div>
            <div class="modal-content"><div class="modal-body"><button type="button" class="bootbox-close-button close" data-dismiss="modal" aria-hidden="true" style="margin-top: -10px;">×</button><div class="bootbox-body">Do you want to decline document?</b></div></div><div data-bind="click: $root.close('#docReject')" class="modal-footer"><button type="button" class="btn btn-default">Cancel</button><button type="button" class="btn btn-primary" data-bind="click: $root.documentReject">OK</button></div></div>
        </div>
    </div>
</div>

<div class="modal fade" id="docSubmit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modalSearch">
                <button data-bind="click: $root.close('#docSubmit')" type="button" class="close" id="close" data-dismiss=""><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Document Submission</h4>
            </div>
            <div class="modal-content"><div class="modal-body"><button type="button" class="bootbox-close-button close" data-dismiss="modal" aria-hidden="true" style="margin-top: -10px;">×</button><div class="bootbox-body">Do you want to submit document for approval?</b></div></div><div data-bind="click: $root.close('#docSubmit')" class="modal-footer"><button type="button" class="btn btn-default">Cancel</button><button type="button" class="btn btn-primary" data-bind="click: $root.docSubmission">OK</button></div></div>
        </div>
    </div>
</div>
@*neeraj*@
<script>
    var chapterUrls = [];

    $('#btnSaveLink').attr('disabled', true);

    $('#inputUrl').on('input', function () {
        var status = vm.getUrl.validateURL($(this).val());
        var ele = document.getElementById('invalidURL');
        if (status) {
            $('#btnSaveLink').attr('disabled', false);
            ele.style.display = "none";
        } else {
            $('#btnSaveLink').attr('disabled', true);
            ele.style.color = "red";
            ele.style.display = "block";
            ele.style.fontWeight = "bold";
        }
    });

    //$('#addContent').on('click', function () {
    //    setTimeout(function () {
    //        var contentLength = ko.unwrap(vm.data.ContentModels).length;
    //        var headerId = "docLinkHeader_" + (contentLength - 1);
    //        document.getElementById(headerId).style.display = "none";
    //    }, 200);
    //});

    function jsDeleteUrl(event) {
        var ele = $(event).closest('tr');
        var chapterId = $(ele).attr('id').toString();
        //var url = $(ele)[0].childNodes[2].innerText;
        //event.remove();
        ele.remove();
        $.each(chapterUrls, function (i, el) {
            if (chapterId == el.ChapterId && $(ele)[0].childNodes[2].innerText == el.Url) {
                chapterUrls.splice(i, 1);
                return false;
            }
        });
        var contentModels = ko.unwrap(vm.data.ContentModels)
        for (var i = 0; i < contentModels ?.length; i++) {
            var chapter_doc_links = [];
            var chapter_doc_names = [];
            if (ko.unwrap(contentModels[i].Id).toString() == chapterId) {
                for (var j = 0; j < chapterUrls ?.length; j++) {
                    if (chapterUrls[j].ChapterId == chapterId) {
                        chapter_doc_links.push(chapterUrls[j].Url);
                        chapter_doc_names.push(chapterUrls[j].Name);
                    }
                }
                contentModels[i].ChapterDocLinks = chapter_doc_links.toString();
                contentModels[i].ChapterDocNames = chapter_doc_names.toString();
                var checkArrayLen = chapter_doc_links.length;
                var checkArrayLen1 = chapter_doc_names.length;
                if (checkArrayLen > 0) {
                } else {
                    var headerId = "docLinkHeader_" + i;
                    document.getElementById(headerId).style.display = "none";
                }
                if (checkArrayLen1 > 0) {
                } else {
                    var headerId = "docLinkHeader1_" + i;
                    document.getElementById(headerId).style.display = "none";
                }
            }
        }
    }

    $('#label-multiselect-Tags').attr("multiple", "multiple").val('');
    $('#label-multiselect-Tags').multiselect({
        includeSelectAllOption: false,
        buttonWidth: 270,
        enableFiltering: true,
        maxHeight: 350,
        enableCaseInsensitiveFiltering: true

    });
    @{
        ((IDictionary<string, string>) ViewBag.Links).Add("print", Url.Action("Print", "Policy", new {Area = ""}));
    }
    var vm = new app.data.documentController(@Html.ToJson(Model),
        @Html.ToJson((IDictionary<string,string>)ViewBag.Links),
        @Html.ToJson((string)ViewBag.Mode),
        @Html.ToJson((IEnumerable<Ramp.Contracts.ViewModel.JSTreeViewModel>)ViewBag.Categories),
        @Html.ToJson(new Ramp.Contracts.ViewModel.PolicyContentBoxModel()),
        '',
        [
            "image:png", "image:jpeg", "image:jpg", "image:gif", "image:bmp", "video:mp4", "document:ppsx", "document:pps", "document:docx", "document:xls", "document:xlsx", "document:ppt", "document:pptx", "document:pdf", "document:csv",
            "audio:mp3"
        ],
        @Html.ToJson(new Ramp.Contracts.ViewModel.FileUploadResultViewModel()),
        120 * 1000);
        @*@Html.ToJson(new Ramp.Contracts.ViewModel.DocumentUrlViewModel())*@


    vm.components = ko.observableArray([]);
    vm.close = (data) => {
        console.log("data", data)
        $(data).modal('hide');
    }

        vm.adminPublishConfirm = () => {
        let x = @Html.ToJson(Model)
        vm.data.PublishStatus(2);
        vm.publish.delegate();
        vm.saveExit();
        feedbackMessage(x, '', false, false, true);
    }

    vm.docSubmission = () => {
        vm.data.Approver(approverList.toString());
        vm.data.PublishStatus(1);

        let x = @Html.ToJson(Model)
        vm.saveExit();

        let msg = document.getElementById("msgToApprover");
        feedbackMessage(vm.data, msg.value, true, false , false);
    }

    vm.documentReject = () => {
        $('#feedbackModal').modal('hide');
        vm.data.PublishStatus(3);

        let x = @Html.ToJson(Model)
            vm.saveExit();

        let msg = document.getElementById("msgToCreator");
        feedbackMessage(x, msg.value, false, true, false, "decline");
    }

            vm.documentAccept = () => {
        vm.data.PublishStatus(2);

        vm.publish.delegate();
        vm.saveExit();
                let x = @Html.ToJson(Model)
        feedbackMessage(x, '', false, true, false, "accept");
    }

    vm.checkSubmitValidation = ko.observable(false);
    vm.scope = { TrainingActivityLogginEnabled: @Html.ToJson((bool)ViewBag.TrainingActivityLogginEnabled)};
    vm.initialize();
    if (!ko.isObservable(vm.data.CoverPicture)) {
        vm.data.CoverPicture = ko.observable(vm.data.CoverPicture);
    }

    vm.changeHandler = {
        Url: function (data, event) {
            var status = vm.getUrl.validateURL(event.target.value);
            if (status) {
                var chapterId = ko.unwrap(data.ChapterId).toString();
                var doc_updated_arr = [];
                var eleId = event.target.id.toString();
                var eles = document.querySelectorAll("#" + eleId);
                var eles_index = eleId.split("link_")[1].toString();
                var hideEle = document.querySelectorAll("#show_" + eles_index)
                for (var i = 0; i < eles.length; i++) {
                    doc_updated_arr.push(eles[i].value);
                    if (eles[i].value == event.target.value && eles[i].value) {
                        hideEle[i].style.display = "none";
                    }
                }

                var model;
                var contentModels = ko.unwrap(vm.data.ContentModels);
                for (var i = 0; i < contentModels ?.length; i++) {
                    var Id = ko.unwrap(contentModels[i].Id).toString();
                    if (Id == chapterId) {
                        model = contentModels[i];
                        break;
                    }
                }

                chapterUrls = chapterUrls.filter(x => x.ChapterId !== chapterId.toString());

                for (var i = 0; i < doc_updated_arr ?.length; i++) {
                    var str = doc_updated_arr[i].toString();
                    if (!(str.startsWith("https:") || str.startsWith("http:"))) {
                        str = "http://" + str;
                    }
                    doc_updated_arr[i] = str;
                    chapterUrls.push({
                        Url: doc_updated_arr[i],
                        ChapterId: chapterId
                    });
                }

                model.ChapterDocLinks = doc_updated_arr.toString();
            } else {
                var elemId = event.target.id.toString();
                var elems = document.querySelectorAll("#" + elemId);
                var elems_index = elemId.split("link_")[1].toString();
                for (var i = 0; i < elems.length; i++) {
                    if (elems[i].value == event.target.value && (!status)) {
                        var showEle = document.querySelectorAll("#show_" + elems_index)
                        showEle[i].style.display = "block";
                    }
                }
            }
        },
        Name: function (data, event) {
            var chapterId = ko.unwrap(data.ChapterId).toString();
            var doc_updated_arr1 = [];
            var eleId = event.target.id.toString();
            var eles = document.querySelectorAll("#" + eleId);
            var eles_index = eleId.split("linkName_")[1].toString();
            var hideEle = document.querySelectorAll("#show_" + eles_index)
            for (var i = 0; i < eles.length; i++) {
                doc_updated_arr1.push(eles[i].value);
                if (eles[i].value == event.target.value && eles[i].value) {
                    hideEle[i].style.display = "none";
                }
            }

            var model;
            var contentModels = ko.unwrap(vm.data.ContentModels);
            for (var i = 0; i < contentModels ?.length; i++) {
                var Id = ko.unwrap(contentModels[i].Id).toString();
                if (Id == chapterId) {
                    model = contentModels[i];
                    break;
                }
            }
            console.log("chapterurls", chapterUrls);

            // chapterUrls = chapterUrls.filter(x => x.ChapterId !== chapterId.toString());
            console.log("doc_updated_arr1", doc_updated_arr1);
            //for (var i = 0; i < doc_updated_arr1 ?.length; i++) {
            //    chapterUrls.push({
            //        ChapterId: chapterId,
            //        Name: doc_updated_arr1[i]
            //    });
            //}

            model.ChapterDocNames = doc_updated_arr1.toString();
        }
    }

    vm.linkModal = {
        open: function (data) {
            var chapterId = ko.unwrap(data.Id);
            $('#inputUrl').val('')
            $('#inputName').val('');
            $('#btnSaveLink').attr('disabled', true);
            $('#docChapterId').val(chapterId)
            $('#myModal').modal('show');
        },
        close: function () {
            $('#inputUrl').val('');
            $('#inputName').val('');
            $('#docChapterId').val('');
            document.getElementById('invalidURL').style.display = "none";
            $('#btnSaveLink').attr('disabled', true);
            $('#myModal').modal('hide');
        }
    }

    vm.getUrl = {
        docUrl: function () {
            var link = $('#inputUrl').val();
            var linkName = $('#inputName').val();
            var chapterId = $('#docChapterId').val();
            var obj = {
                Url: link,
                ChapterId: chapterId,
                Name: linkName
            }
            chapterUrls.push(obj)

            //var dataRes = "<tr id=" + chapterId + " onclick = 'javascript:jsDeleteUrl(this);'>";
            //dataRes += "<td>" + link + "</td>"
            //dataRes += "<td><a href='javascript:void(0)'>Delete</a></td>";
            //dataRes += "</tr>"

            var index = -1;
            var contentModels = ko.unwrap(vm.data.ContentModels);
            for (var i = 0; i < contentModels ?.length; i++) {
                var Id = ko.unwrap(contentModels[i].Id).toString();
                if (Id == chapterId) {
                    index = i;
                    var chapter_doc_links = [];
                    var chapter_doc_names = [];
                    for (var j = 0; j < chapterUrls ?.length; j++) {
                        if (chapterUrls[j].ChapterId == chapterId) {
                            chapter_doc_links.push(chapterUrls[j].Url);
                            chapter_doc_names.push(chapterUrls[j].Name);

                        }
                    }
                    contentModels[i].ChapterDocLinks = chapter_doc_links.toString();
                    contentModels[i].ChapterDocNames = chapter_doc_names.toString();
                    var headerId = "docLinkHeader_" + i;
                    if (document.getElementById(headerId).style.display == "none") {
                        document.getElementById(headerId).style.display = "block";
                    }
                    break;
                }
            }

            var linkIndex = "link_" + index;
            var linkNameIndex = "linkName_" + index;
            var showIndex = "show_" + index;

            var dr = "<tr id=" + chapterId + ">";
            dr += "<td style='max-width: 50px'><a class='btn'><span class='glyphicon glyphicon-sort uploadhandle' style='color: black'></span></a>";
            dr += "</td>";
            dr += "<td class='upload upload-detail-20'>";
            dr += "<img class='img-responsive upload-thumbnail' src='@Url.Content("~/Content/images/file/WebFrame.png")' />";
            dr += "</td>";
            dr += "<td class='upload upload-detail-40'>";
            dr += "<input type='text' id=" + linkNameIndex + " value=" + linkName + " class='form-control' readonly='true' style='width: 100%' rows='4'/>";
            dr += "</td>";
            dr += "<td class='upload upload-detail-40'>";
            dr += "<input type='text' id=" + linkIndex + " value=" + link + " class='form-control' readonly='true' style='width: 100%' rows='4'/>";
            dr += "</td>";
            dr += "<td class='upload upload-detail-20'>";
            dr += "<span id="+ showIndex +" style='display: none; padding: 7px; color: red'>Enter a Valid Link</span>";
            dr += "</td>";
            dr += "<td class='upload upload-detail-20' style='max-width: 50px'>";
            dr += "<a href='javascript:void(0)' onclick = 'javascript:jsDeleteUrl(this);'><button class='btn btn-danger upload-action'><i class='glyphicon glyphicon-trash'></i></button></a>";
            dr += "</td></tr>";

            //$('#chapter_' + index).append(dataRes);
            $('#chapter_' + index).append(dr);
        },

        validateURL: function (url) {
            if (url != null && url != "" && url != undefined) {
                //var pattern = /^(http|https)?:\/\/[a-zA-Z0-9-\.]+\.[a-z]{2,4}/;
                //return pattern.test(url);
                var myVariable = url;
                if (/^(http|https|ftp):\/\/[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/i.test(myVariable)) {
                    return true;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        }
    }

     vm.deleteChapterUrl = function (data, event) {
        $.each(chapterUrls, function (i, el) {
            if (ko.unwrap(data.ChapterId) == el.ChapterId &&
                ko.unwrap(data.Url) == el.Url) {
                chapterUrls.splice(i, 1);
                return false;
            }
        });
        var contentModels = ko.unwrap(vm.data.ContentModels);

        for (var i = 0; i < contentModels ?.length; i++) {
            var Id = ko.unwrap(contentModels[i].Id).toString();
            if (Id == ko.unwrap(data.ChapterId)) {
                ko.unwrap(contentModels[i].DocLinks.remove(ko.unwrap(data)));
                contentModels[i].ChapterDocLinks = null;
                contentModels[i].ChapterDocNames = null;

                var chapter_doc_links = [];
                var chapter_doc_names = [];
                for (var j = 0; j < chapterUrls ?.length; j++) {
                    if (chapterUrls[j].ChapterId == ko.unwrap(data.ChapterId)) {
                        chapter_doc_links.push(chapterUrls[j].Url);
                        chapter_doc_names.push(chapterUrls[j].Name);
                    }
                }
                contentModels[i].ChapterDocLinks = chapter_doc_links.toString();
                contentModels[i].ChapterDocNames = chapter_doc_names.toString();
                var checkArrInitLength = chapter_doc_links.length;
                if (checkArrInitLength > 0) {
                } else {
                    var headerId = "docLinkHeader_" + i;
                    document.getElementById(headerId).style.display = "none";
                }
                var checkArrInitLength1 = chapter_doc_names.length;
                if (checkArrInitLength1 > 0) {
                } else {
                    var headerId = "docLinkHeader1_" + i;
                    document.getElementById(headerId).style.display = "none";
                }
                break;
            }
        }
    }

    var contentLists = ko.unwrap(vm.data.ContentModels);
    if (ko.unwrap(contentLists[0]) != null && ko.unwrap(contentLists[0]) != undefined) {
        for (var i = 0; i < contentLists ?.length; i++) {
            var documentLinks = ko.unwrap(contentLists[i].DocLinks);
            var chapter_doc_links = [];
            var chapter_doc_names = [];
            for (var j = 0; j < documentLinks ?.length; j++) {
                if (ko.unwrap(documentLinks[j].ChapterId) == ko.unwrap(contentLists[i].Id)) {
                    chapterUrls.push({
                        Url: ko.unwrap(documentLinks[j].Url),
                        ChapterId: ko.unwrap(documentLinks[j].ChapterId),
                        Name: ko.unwrap(documentLinks[j].Name)
                    })
                    chapter_doc_links.push(ko.unwrap(documentLinks[j].Url));
                    chapter_doc_names.push(ko.unwrap(documentLinks[j].Name));
                }
            }
            contentLists[i].ChapterDocLinks = chapter_doc_links.toString();
            contentLists[i].ChapterDocNames = chapter_doc_names.toString();
            var checkArrayInitLength = chapter_doc_links.length;
            var headerId = "docLinkHeader_" + i;
            if (checkArrayInitLength > 0) {
                setTimeout(function () {
                    document.getElementById(headerId).style.display = "block";
                }, 500);
            } else {
                setTimeout(function () {
                    document.getElementById(headerId).style.display = "none";
                }, 500);
            }
            var checkArrayInitLength1 = chapter_doc_names.length;
            var headerId1 = "docLinkHeader1_" + i;
            if (checkArrayInitLength1 > 0) {
                setTimeout(function () {
                    document.getElementById(headerId1).style.display = "block";
                }, 500);
            } else {
                setTimeout(function () {
                    document.getElementById(headerId1).style.display = "none";
                }, 500);
            }
        }
    } else {
        var docheaderId = "docLinkHeader_0";
        setTimeout(function () {
            document.getElementById(docheaderId).style.display = "none";
        }, 300);
    }

    ko.applyBindings(vm,document.getElementsByTagName('body')[0]);
    app.data.typeahead.tags.create('#TrainingLabels', '@Url.Content("~/AutoComplete/" + Ramp.Contracts.ViewModel.AutoCompleteSection.Labels.Action)', '@Ramp.Contracts.ViewModel.AutoCompleteSection.Labels.Name', true, vm.data.TrainingLabels);
    $(function () {

        $("#spnMessage").hide();
        $('#label-multiselect-Tags').change(function () {
            var tags = $("#label-multiselect-Tags option:selected").toArray().map(item => item.text).join();
            vm.data.TrainingLabels((tags).toString());
        });
        var nameArr = ko.unwrap(vm.data.LabelIds).split(',');
        $('#label-multiselect-Tags').val(nameArr);
        for (var i in nameArr) {
            var optionVal = nameArr[i];
            $("#label-multiselect-Tags").find("option[value='" + optionVal + "']").prop("selected", "selected");

        }
        $("#label-multiselect-Tags").multiselect('refresh');
        /************* Ashok write the code to make the chapter reorderable **************/
        //$("#sortable").sortable({
        //    update: function (event, ui) {
        //        var count = 1;
        //        var content = ko.unwrap(vm.data.ContentModels);
        //        $(".ui-sortable-handle").each(function () {

        //            var role = $(this).attr("role");
        //            var newContent = content.filter(c => ko.unwrap(c.Id) == role);
        //            newContent[0].Number(count);
        //            count++;

        //        });
        //    }
        //});
        //$("#sortable").disableSelection();
    });
   //neeraj
    $("#publish").click((data) => {

        console.log("data ", data);

        let x = @Html.ToJson(Model)
             if (x.Id == null || x.CreatedBy == null || x.CreatedBy == '@uId') {
            vm.data.PublishStatus(2);
            vm.publish.delegate();
            vm.saveExit();
            } else {
                $('#adminPublish').modal('show');
        }


    });

    $("#approval1").on('click', () => {
        $('#publishModal1').modal('show');
    });

    $("#btnSaveContentCreator").click((data) => {
        $('#publishModal1').modal('hide');
        $('#docSubmit').modal('show');
        //vm.docSubmission();

        @*vm.data.Approver(approverList.toString());
        vm.data.PublishStatus(1);

        let x = @Html.ToJson(Model)
        vm.saveExit();

        let msg = document.getElementById("msgToApprover");
        feedbackMessage(x, msg.value, true, false , false);*@

    });

    $("#btnCancel4").on('click', () => {
        $('#feedbackModal').modal('hide');
    });

    /////for content approver decline and approve functionality

    //when approver click on decline button
    $(".decline").on("click", () => {
        $("#feedbackModal").modal("show");
    });

    //when approver click on approve button
    $(".approve").on("click", () => {
        $("#docAccept").modal("show");
        //vm.data.PublishStatus(2);

        //vm.publish.delegate();
        //vm.saveExit();

        //feedbackMessage(x, msg.value, false, true, false, "accept");
    });

    //when approver enters the feedback message and clicks save from feedback modal
    $("#declineCreatorMsg").click((data) => {
        $('#feedbackModal').modal('hide');
        $('#docReject').modal('show');
        @*vm.data.PublishStatus(3);

        let x = @Html.ToJson(Model)
            vm.saveExit();

        let msg = document.getElementById("msgToCreator");
        feedbackMessage(x, msg.value, false, true, false, "decline");*@
    });
    /////

    $("#btnCancelFeedback1").on("click", () => {
        $("#feedbackModal").modal("hide");
    });

    $('.multiselect1').change(function () {

        approverList = $(this).val()
        console.log("data ", approverList)
        let msg = document.getElementById("msgToApprover");
        if (approverList != null && msg.value != "") { vm.checkSubmitValidation(true) }
        else vm.checkSubmitValidation(false)
    });

    $('#msgToApprover').bind('input propertychange', function () {
        let msg = document.getElementById("msgToApprover");
        if (approverList != null && msg.value != "") { vm.checkSubmitValidation(true) }
        else vm.checkSubmitValidation(false)
    });

    function feedbackMessage(x, msg, creator, approver, amdin, action = null) {
        console.log("iniside feedback message function ", approverList);
         $('#LoadingImageDiv').show();
            var url = '@Url.Action("DocumentWorkFlowMessageSave")';
            $.ajax({
                    method: 'POST',
                    url: url,
                data: {
                    model: x, message: msg, creator: creator, approver: approver, admin: amdin, approvers: approverList, action: action
                    }
                })
                .done(function (data) {
                    notif({
                        msg: 'Your progress has been saved.',
                        multiline: true,
                        type: 'success'
                    });
                    //window.location.assign("/Document/MyDocuments");
                })
                .always(function() {
                    $('#LoadingImageDiv').hide();
                });


    }
    //neeraj
</script>
