@using Ramp.Security.Authorization
@using Ramp.Contracts.ViewModel
@using Web.UI.Areas.Categories.Controllers
@using Web.UI.Areas.CustomerManagement.Controllers
@using Web.UI.Areas.ManageTrainingGuides.Controllers
@using Web.UI.Areas.ManageTrainingTest.Controllers
@using Web.UI.Code.Extensions
@using Web.UI.Controllers
@using Web.UI.Areas.Reporting.Controllers
@using Web.UI.Areas.Feedback.Controllers
@using Web.UI.Areas.Configurations.Controllers
@using Web.UI.Areas.ProvisionalManagement.Controllers
@using System.Threading
@using Domain.Models
@{
    var version = System.Reflection.Assembly.GetAssembly(typeof(Web.UI.App_Start.RampSecurityConfig)).GetName().Version.ToString();
    var portalContext = Html.GetPortalContext();
    var footerLogoUrl = Url.Content("~/images/powered.PNG");
    if (portalContext != null && portalContext.UserCompany != null)
    {
        if (portalContext.UserCompany.CustomerConfigurations.Count > 0)
        {
            var customerConfiguration = portalContext.UserCompany.CustomerConfigurations;
            var footerImage = customerConfiguration.Where(x => x.Type == CustomerConfigurationType.FooterLogo && (!x.Deleted.HasValue || (x.Deleted.HasValue && !x.Deleted.Value))).OrderBy(x => x.Version).LastOrDefault();
            if (footerImage != null && footerImage.UploadModel != null)
            {
                footerLogoUrl = "data:image/png;base64," + Convert.ToBase64String(footerImage.UploadModel.Data);
            }
        }
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv=“X-UA-Compatible” content="IE=11" />
    <title>OnRamp Online Training Portal</title>
    @Styles.Render("~/bundles/css")
    <link href="~/Content/admin.css?v=@version" rel="stylesheet" />
    @Scripts.Render("~/bundles/js")
    <script src="~/Scripts/app/app.common.js?v=@version"></script>
    <script src="~/Scripts/app/app.datamodel.js?v=@version"></script>
    <script src="~/Scripts/app/app.viewmodel.js?v=@version"></script>
    <script src="~/Scripts/app/extension.common.js?v=@version"></script>
    <script src="~/Scripts/app/extension.ajaxprefilter.js?v=@version"></script>
    <script src="~/Scripts/app/extension.editortemplates.js?v=@version"></script>
    <script src="~/Scripts/app/extension.extenders.js?v=@version"></script>
    <script src="~/Scripts/app/extensions.validation.js?v=@version"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <script src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    @if (HttpContext.Current.IsDebuggingEnabled)
    {
        <link rel="stylesheet" href="~/Content/ContentTools/build/content-tools.min.css" />
        <link rel="stylesheet" href="~/Content/fancyBox/source/jquery.fancybox.css" />
    }
    else
    {
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ContentTools@1.6.8/build/content-tools.min.css" />
        <link rel="stylesheet" href="~/Content/hopscotch/dist/css/hopscotch.min.css" />
        <link rel="stylesheet" href="~/Content/fancyBox/source/jquery.fancybox.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-tagsinput/0.8.0/bootstrap-tagsinput.css" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-tagsinput/0.8.0/bootstrap-tagsinput.min.js"></script>
    }
    @{
        var EnabledTrainingActivityLoggingModule = false;
        if (PortalContext.Current != null && PortalContext.Current.UserCompany != null)
        {
            EnabledTrainingActivityLoggingModule = PortalContext.Current.UserCompany.EnableTrainingActivityLoggingModule;
        }
    }
    @if (PortalContext.Current != null && PortalContext.Current.UserCompany != null && PortalContext.Current.UserCompany.ApplyCustomCss && File.Exists(Server.MapPath("~/Content/" + PortalContext.Current.UserCompany.Id.ToString() + "-custom.css")))
    {
        var customCssPath = Url.Content("~/Content/" + PortalContext.Current.UserCompany.Id.ToString() + "-custom.css");
        <link id="ApplyCustomCss" href="@customCssPath" rel="stylesheet" />
    }

    @RenderSection("scripts", false)
    @Html.Partial("_NotifyPartial")
    @if (PortalContext.Current != null)
    {
        <style>
            @Html.Raw(PortalContext.Current.EmbedCss())
        </style>
    }

    <script type="text/javascript">
        var tour = {
            id: 'hello-hopscotch',
            steps: [],
            showPrevButton: true,
            scrollTopMargin: 100
        };
        var tour1 = {
            id: 'hello-hopscotch',
            steps: [],
            showPrevButton: true,
            scrollTopMargin: 100
        };

        $(function() {
            var respondTimeout = null;
            var timeOutInterval = null;
            var secondsRemaining = 30;
            var useTestDuraionTimeout = false;
            if (window.hasOwnProperty('startTest_TestDuration'))
                useTestDuraionTimeout = true;

            function TimeoutFunction() {
                if ($.fancybox.isOpen) {
                    reEnlistTimeoutInterval();
                    return;
                }
                if (window.hasOwnProperty('AutoSave'))
                    AutoSave();
                secondsRemaining = 30;
                $('#timeout').modal('show');
                var interval = window.setInterval(function() {
                        secondsRemaining--;
                        if (secondsRemaining < 0)
                            window.clearInterval(interval);
                        $('#timeout_remainingSeconds').html(secondsRemaining);
                    },
                    1000);

                respondTimeout = window.setTimeout(function() {
                        $('#timeout_logOut').trigger('click');
                        window.clearInterval(interval);
                    },
                    60 * 1000 * .5);
            }

            $('.dropdown-link').on('click',
                function() {
                    if ($(this).attr('href'))
                        if ($(this).attr('href') !== '')
                            window.location.href = $(this).attr('href');
                });
            
         
        
        });


    </script>
    <script type="text/javascript">
        function isInViewport(element, offsetTop, offsetBottom) {
            if (!$(element))
                return false;
            var elementTop = $(element).offset().top + offsetTop
            var elementBottom = elementTop + $(element).outerHeight() + offsetBottom;

            var viewportTop = $(window).scrollTop();
            var viewportBottom = viewportTop + $(window).height();

            return elementBottom > viewportTop && elementTop < viewportBottom;
        };
        function _adjustPageFooter() {
            var style = $('#allNavigation').attr('style')
                ? $('#allNavigation').attr('style')
                : $('#midMenu').attr('style');
            var hidden = style ? style.indexOf('display: none') : false;
            if (hidden)
                $('#wrapper').attr('style', 'min-height:82%');
            else
                $('#wrapper').attr('style', '');

        };
        function _adjustNav() {
            if (!isInViewport($('#midMenu'), -50, -25) && !$('#allNavigation').hasClass('navbar-fixed-top')) {
                $('#allNavigation').toggleClass('navbar-fixed-top');
                $('#nav2').toggleClass('navbar-fixed-top');
            } else if (isInViewport($('#nav2'), -50, -25) && !$('#nav2').hasClass('navbar-fixed-top')) {
                $('#allNavigation').toggleClass('navbar-fixed-top');
                $('#nav2').toggleClass('navbar-fixed-top');
            }
        }
        function _adjustBuildMenu() {
            var menu = $('#buildMenu');
            if (menu.length) {
                if (!isInViewport($('footer'), $('footer').outerHeight(), 0) && !$('#buildMenu').hasClass('navbar-fixed-bottom')) {
                    $('#buildMenu').toggleClass('navbar-fixed-bottom');
                    $('#buildMenu').toggleClass('custom-build-menu');
                } else if (isInViewport($('footer'), $('footer').outerHeight(), 0) && $('#buildMenu').hasClass('navbar-fixed-bottom')) {
                    $('#buildMenu').toggleClass('navbar-fixed-bottom');
                    $('#buildMenu').toggleClass('custom-build-menu');
                }
            }
        }
        function _loadCustomerCss() {
            $('#ApplyCustomCss').attr("href",
                Url.Content("~/Content/" + PortalContext.Current.UserCompany.Id.ToString() + "-custom.css"));
        }

        $(document).ready(function () {
            _adjustPageFooter();
            $(window).on('resize', _adjustPageFooter);
            _adjustNav();
            $(window).on('resize', _adjustNav);
            $(window).on('scroll', _adjustNav);
            _adjustBuildMenu();
            $(window).on('resize', _adjustBuildMenu);
            $(window).on('scroll', _adjustBuildMenu);
        });
    </script>

    @*New Script*@

    <script type="text/javascript">
        //<![CDATA[
        if (typeof jQuery == 'undefined') {
            document.write(
                unescape("%3Cscript src='/script/JS/jquery-1.6.2.min.js' type='text/javascript' %3E%3C/script%3E"));
        } //]]></script>
    <script type="text/javascript" language="Javascript" src="~/Scripts/navbarmenu.min.js"></script>
    <script type="text/javascript" language="Javascript">
        //<![CDATA[
        var notificationAlert = new NotificationAlert('ctl00_MemberMenu_Messages_NotificationCount',
            'Notifications',
            '/script/Membership/Ajax/NotificationList.aspx');
        notificationAlert.initialise();
        var oSrchFlt = false, oSrchBox = false, srchBoxFoc = false;
        $(document).ready(function () {
            if (InitWatermark) InitWatermark('sb_tb', 'Document Search');
            var sbar = $('#sb_tb');
            var sfilter = $('#SearchFilter');
            if (sbar && sfilter) {
                sfilter.removeClass('popup');
                sfilter.hide();
                sfilter.removeClass('open');
                sbar.blur(function () {
                    if (!oSrchFlt) {
                        sfilter.hide();
                        sfilter.removeClass('open');
                    }
                    srchBoxFoc = false;
                });
                sbar.focus(function () {
                    oSrchFlt = false;
                    srchBoxFoc = true;
                    sfilter.show();
                    sfilter.addClass('open');
                });
                sbar.mouseleave(function () { oSrchBox = false; });
                sbar.mouseover(function () { oSrchBox = true; });
                sfilter.mouseleave(function () {
                    oSrchFlt = false;
                    if (!srchBoxFoc && !oSrchBox) {
                        sfilter.hide();
                        sfilter.removeClass('open');
                    }
                });
                sfilter.mouseover(function () { oSrchFlt = true; });
            }
        });

        //]]>
    </script>

    <script type="text/javascript">

         function closeFeedbackModal() {
             $('#feedbackModal').modal('hide');
             }
        // Textbox change Event
        $(function () {

             $('#feedbackLink').click(function () {

        var promise = $.get("@Url.Action("CustomerUserSurvey", "CustomerMgmt", new { area= "CustomerManagement" })");

            promise.done(function (data) {
                $('#divFeedback').html(data);
                $('#feedbackModal').modal('show');
            });
            promise.fail(function (jqXHR, textStatus, errorThrown) {
                console.error(errorThrown);
            });
            promise.always(function () {

            });

        });


            $("#myProfileLink").click(
                function () {

                    var promise = $.get("@Url.Action("EditMyProfile", "Account", new { area= "", id = Thread.CurrentPrincipal.GetId() })");

                    promise.done(function (data) {

                        $("#myProfileModal").modal("show");
                        $('#divMyProfile').html(data);
                    });
                    promise.fail(function (jqXHR, textStatus, errorThrown) {
                        console.error(errorThrown);

                    });
                    promise.always(function () {


                    });
                });

            $("#btnMyProfileModalClose").click(function () {
                $("#myProfileModal").modal("hide");

            })

            $('#sb_tb').on('keyup', function (event) {
                if (event.keyCode == 13) {
                    $('#searchId').trigger('click');
                }
            });
            $('#searchId').click(function() {
                var filter = $('#sb_tb').val();
                if (filter == "") {
                    //alert(search);
                } else {
                    var search = $('input[name=sbo]:checked').val();
                    // search function call
                    SearchResult(filter, search);
                }
                //alert(search);
            });

            // Radio button change Event.

            $('input[name=sbo]').change(function() {

                var filter = $('#sb_tb').val();
                if (filter == "") {
                    //alert(search);
                } else {
                    var search = $('input[name=sbo]:checked').val();
                    // search function call
                    //  SearchResult(filter, search);
                }

            });

            $('#sb_tb').change(function() {
                var filter = $('#sb_tb').val();
                if (filter == "") {
                    //alert(search);
                } else {
                    var search = $('input[name=sbo]:checked').val();
                    // search function call
                    SearchResult(filter, search);
                }
                //alert(search);
            });
            $("#btnClose").on('click',
                function() {
                    $('#LoadingImageDiv').hide();
                    $('#mpopBody').hide();
                    //$('#myModal').popup("close");
                    $('#mySearchModal').modal('hide');

                });
            @if (PortalContext.Current != null && SessionManager.GetSessionInformation() != null
                 && PortalContext.Current.ShouldShowDisclaimer(SessionManager.GetSessionInformation().UserHasAcceptedDisclaimer, SessionManager.GetSessionInformation().DisclaimerAcknowledged))
            {
                SessionManager.GetSessionInformation().DisclaimerAcknowledged = true;

                @Html.Raw("showDisclaimer();")
                ;
            }
            $('#accept-disclaimer').on('click', hideAndLogDisclaimerResult);
            $('#do-not-accept-disclaimer').on('click', hideAndLogDisclaimerResult);
        });

        function SearchResult(searchText, searchType) {

            $('#LoadingImageDiv').show();
            $('#mpopBody').hide();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GlobalSearch", "Home", new {Area = ""})',
                data: { searchText: searchText, searchType: searchType },
                success: function(data) {

                    //$('#myModal').popup("open");
                    $('#mySearchModal').modal('show');

                    $('#mySearchModal .modal-body').html(data);
                    $('#LoadingImageDiv').hide();
                },
                error: function(data) {
                    $('#LoadingImageDiv').hide();
                    notif({
                        msg: "<b>Error :</b>Error while searching",
                        type: "error",
                    });
                }
            });

        }

        function showDisclaimer() {
            $('#myLegalDisclaimerModal').modal('show');
        }

        function hideAndLogDisclaimerResult(event) {
            var result = false;
            if ($(event.target).attr('id') == 'accept-disclaimer')
                result = true;
            logDisclaimerActivity(result);
        }

        function logDisclaimerActivity(result) {
            $.ajax({
                url: '@Url.Action("CreateUserDisclaimerActivity", "Activity", new {Area = ""})',
                method: 'POST',
                data: {
                    Accepted: result,
                    UserId: '@SessionManager.GetCurrentlyLoggedInUserId()'
                },
                success: function(status) {
                    $('#myLegalDisclaimerModal').modal('hide');
                    notif({
                        type: 'success',
                        msg: 'Logged Disclaimer Activity'
                    });
                    if (!result)
                        window.location.href = '@Url.Action("LogOff", "Account", new {Area = ""})';
                },
                error: function(status) {
                    $('#myLegalDisclaimerModal').modal('hide');
                    notif({
                        type: 'error',
                        msg: 'Logging Disclaimer Activity Error'
                    });
                    if (!result)
                        window.location.href = '@Url.Action("LogOff", "Account", new {Area = ""})';
                }
            });
        }
    </script>
</head>
<body>
    <div id="wrapper">
        <div id="LoadingImageDiv" class="modal-backdrop fade in" style="background-color: #FFF !important; display: none">
            <div style="left: 47%; position: absolute !important; top: 34%;">
                <p>
                    <img src="@(Url.Content("~/Content/images/Preloader_3.gif"))" />
                </p>
                <label>Loading</label>
            </div>
        </div>

        @{
            SessionInformation sessionInfo = SessionManager.GetSessionInformation();
            <input type="hidden" id="hiddenCompanyId" value="@PortalContext.Current.UserCompany.Id" />
        }

        <nav class="navbar navbar-default navbar-fixed-top navbar-top-custom" id="nav2">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#topMenu">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>

                </div>
                @{
                    // Changes made for having 2 tour on same view
                    if (Thread.CurrentPrincipal.IsInStandardUserRole())
                    {
                        <input id="CustomHopscotchID" type="hidden" value="1" />
                    }
                    else
                    {
                        <input id="CustomHopscotchID" type="hidden" value="0" />
                    }

                    <div id="topMenu" class="navbar-collapse collapse">
                        <ul class="nav navbar-nav navbar-left">
                            <li role="menuitem">
                                <a href="javascript:Void(0);" style="color: white;">Welcome @Thread.CurrentPrincipal.GetGivenName() </a>
                            </li>
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
                            @if (Thread.CurrentPrincipal.IsInAdminRole())
                            {
                                <li class="topmenu">
                                    <a href="https://onramp.freshdesk.com/support/tickets/new" target="_blank" style="color: white; "> Submit a support ticket</a>
                                </li>
                            }

                            <li class="topmenu-item" id="editProfile">
                                <a id="myProfileLink" style="cursor: pointer;color: white"> My Profile</a>
                            </li>
                            @if (!Thread.CurrentPrincipal.IsInResellerRole())
                            {
                                @*
                                    <li class="topmenu-item-half hidden-xs">
                                        <a href="javascript:Void(0)" style="color:white; margin-right:-10px;">Tour</a>
                                    </li>

                                                    <li class="topmenu-item-half hidden-xs">
                                                        <button id="startTourBtn" style="display:none" class="">Take a tour</button>
                                                        <input type="checkbox" id="TourCheckBox" style="height: 30px; width: 30px; display: inline; padding:10px 0 0 0px; left: 8px; top: 10px;" data-toggle="toggle" data-size="mini" />
                                                    </li>
                                *@
                                <li class="topmenu-item">
                                    <a href="@(Url.Content("~/Account/LogOff"))" id="logoutLink" style="color: white;">
                                        Logout
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </nav>
        @if (Thread.CurrentPrincipal.IsInAdminRole())
        {
            <div id="allNavigation" class="navbar navbar-default navbar-inner-menu" role="navigation" style="margin-bottom: 0px;">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#midMenu">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                    </div>
                    <div id="midMenu" class="navbar-collapse collapse navbar-inner">
                        <ul class="nav navbar-nav">
                            <li role="menuitem" class="@Html.IsActive("Administrator", "Home")">
                                <a href="@Url.Action("Administrator", "Home", new {Area = ""})">Home</a>
                            </li>
                            @if (Html.CanAccess<DocumentController>(a => a.Index(null)))
                            {
                                <li role="menuitem" class="@Html.IsActive("Index", "Document")">
                                    <a href="@Url.Action("Index", "Document", new {Area = ""})">Build</a>
                                </li>
                            }
                            @if (Html.CanAccess<SendController>(a => a.Index()))
                            {
                                <li role="menuitem" class="@Html.IsActive("Index", "Send")">
                                    <a href="@Url.Action("Index", "Send", new {Area = ""})">Send</a>
                                </li>
                            }
                            @if (Html.CanAccess<HomeController>(m => m.AdminReports()) ||
                                 Html.CanAccess<IndividualDevelopmentRecordReportController>(m => m.Index(null)) ||
                                 Html.CanAccess<ExternalTrainingProviderReportController>(m => m.Index(null)) ||
                                 Html.CanAccess<TrainingActivityReportController>(m => m.Index(null)))
                            {
                                <li class="dropdown @Html.IsActive("AdminReports", "Home")" id="trackDropdown">
                                    <a class="dropdown-toggle dropdown-link" id="track-menu-dropdown" aria-haspopup="true" aria-expanded="true" data-hover="dropdown" data-toggle="dropdown" href="javascript:void(0)">Track <span class="caret"></span></a>
                                    <ul class="dropdown-menu" role="menu" aria-labelledby="track-menu-dropdown">
                                        @if (Html.CanAccess<FeedbackController>(a => a.ContentFeedbackReport()))
                                        {
                                            <li>
                                                <a href="@(Url.Content("~/Feedback/ContentFeedbackReport"))">
                                                    Content Feedback Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<ExternalTrainingProviderReportController>(a => a.Index(null)) && EnabledTrainingActivityLoggingModule)
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "ExternalTrainingProviderReport", new {Area = "Reporting"})">
                                                    External Training Provider Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<ManageTrainingTestController>(a => a.FocusAreaReport()))
                                        {
                                            <li>
                                                <a href="@(Url.Action("FocusAreaReport", "ManageTrainingTest", new {Area = "ManageTrainingTest"}))">
                                                    Focus Area Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<IndividualDevelopmentRecordReportController>(a => a.Index(null)) && EnabledTrainingActivityLoggingModule)
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "IndividualDevelopmentRecordReport", new {Area = "Reporting"})">
                                                    Individual Development Record Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<InteractionReportController>(a => a.Index()))
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "InteractionReport", new {Area = "Reporting"})"> Interaction Report</a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<PointsStatementController>(a => a.Index(null)))
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "PointsStatement", new {Area = "Reporting"})">
                                                    Points Statement Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<TrainingActivityReportController>(a => a.Index(null)) && EnabledTrainingActivityLoggingModule)
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "TrainingActivityReport", new {Area = "Reporting"})">
                                                    Training Activity Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<UserActivityAndPerformanceReportController>(a => a.Index(null)))
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "UserActivityAndPerformanceReport", new {Area = "Reporting"})">
                                                    User Activity & Performance Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<CheckListSubmissionReportController>(a => a.Index(null)) && PortalContext.Current.UserCompany.EnableChecklistDocument)
                                        {
                                            <li>
                                                <a href="@Url.Action("Index", "CheckListSubmissionReport", new {Area = "Reporting"})">
                                                    Checklist Submission Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<ManagerUserController>(a => a.UserCorrespondenceDetails()))
                                        {
                                            <li>
                                                <a href="@Url.Content("~/Configurations/ManagerUser/UserCorrespondenceDetails")">
                                                    User Correspondence Report
                                                </a>
                                            </li>
                                        }
                                        @if (Html.CanAccess<ManagerUserController>(a => a.UserActivityDetails()))
                                        {
                                            <li>
                                                <a href="@Url.Action("UserActivityDetails", "ManagerUser", new {Area = "Configurations"})">
                                                    User Login Report
                                                </a>
                                            </li>
                                        }


                                        @if (PortalContext.Current.UserCompany.EnableVirtualClassRoom)
                                        {
                                            <li role="menuitem" id="liMeetingReport">
                                                <a style="cursor:pointer" href="@Url.Action("Index", "MeetingReport", new {Area = "Reporting"})">
                                                    Virtual Meeting Room Attendence Report
                                                </a>
                                            </li>

                                        }


                                    </ul>
                                </li>
                            }

                            <li role="menuitem" id="liMeetingRoom" class="@Html.IsActive("Index", "VirtualMeeting")">
                                <a href="@Url.Action("Index", "VirtualMeeting", new {Area = ""})">
                                    Virtual Meeting Rooms
                                </a>
                            </li>

                            @if (Html.CanAccess<CustomerMgmtController>(a => a.ManageOwnCustomerCompanyUser(Guid.Empty, Guid.Empty, null, null))
                                 || Html.CanAccess<ManageGroupsController>(a => a.Index(null, null))
                                 || Html.CanAccess<CustomerMgmtController>(a => a.CustomerUserSelfSignUpNotApproved()))
                            {
                                <li class="dropdown" role="menuitem">
                                    <a href="@Url.Action("Index", "UserMgmt", new {Area = "UserManagement" , companyId = PortalContext.Current.UserCompany.Id, userId = Guid.Empty, companyName = PortalContext.Current.UserCompany.CompanyName})">
                                        User Management
                                    </a>
                                </li>

                            }

                           
                         
                  
                            @if (Html.CanAccess<CustomerMgmtController>(m => m.CustomerAdminSetting()))
                            {
                                <li role="menuitem" class="@Html.IsActive("CustomerAdminSetting", "CustomerMgmt")">
                                    <a href="@(Url.Action("CustomerAdminSetting", "CustomerMgmt", new {Area = "CustomerManagement"  , companyId = PortalContext.Current.UserCompany.Id}))">Settings</a>
                                </li>
                            }
                        </ul>
                        <div class="navbar-form navbar-right search">
                            <div class="input-group">
                                <input type="search" placeholder="Document Search" tabindex="-1" class="form-control" id="sb_tb" value="" name="q">
                                <span class="input-group-btn">
                                    <button id="searchId" class="btn btn-primary"><i class=" glyphicon glyphicon-search"></i></button>
                                </span>
                            </div>
                            <div class="hover-container" hidden="hidden">
                                <div id="SearchFilter" class="search-advanced small-text align-left" style="display: none;">
                                    <b>Search within:<br></b>
                                    <br />
                                    <input type="radio" id="sb_kw" name="sbo" value="0" checked="checked"><label for="sb_kw">PlayBook</label><br>
                                    <input type="radio" id="sb_qa" name="sbo" value="1"><label for="sb_qa">Playbook Test</label><br>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (Thread.CurrentPrincipal.IsInStandardUserRole())
        {
            <div id="allNavigation" class="navbar navbar-inner-menu navbar-default" role="navigation" style="margin-bottom: 0px;">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#midMenu">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                    </div>
                    <div id="midMenu" class="navbar-collapse collapse navbar-inner">
                        <ul class="nav navbar-nav">
                            <li role="menuitem" class="@Html.IsActive("StandardUser", "Home")">
                                <a href="@Url.Action("StandardUser", "Home", new {Area = ""})">
                                    Home
                                </a>
                            </li>
                            <li role="menuitem" class="@Html.IsActive("MyDocuments", "Document")">
                                <a href="@Url.Action("MyDocuments", "Document", new {Area = ""})">
                                    My Documents
                                </a>
                            </li>

                            @if (PortalContext.Current.UserCompany.EnableGlobalAccessDocuments)
                            {
                                <li role="menuitem" class="@Html.IsActive("GlobalDocuments", "Document")">
                                    <a href="@Url.Action("GlobalDocuments", "Document", new { Area = "" })">
                                        Learn More
                                    </a>
                                </li>
                            }
                            @if (PortalContext.Current.UserCompany.EnableVirtualClassRoom)
                            {
                                <li role="menuitem" id="liVirtualClassroom" class="@Html.IsActive("MyDocuments", "Document")">
                                    <a href="@Url.Action("MyVirtualMeetings", "Document", new { Area = "" })">
                                        My Virtual Meeting Rooms
                                    </a>
                                </li>
                            }
                        </ul>
                        <div class="navbar-form navbar-right search">
                            <div class="input-group">
                                <input type="search" placeholder="Document Search" class="form-control" id="sb_tb" value="" name="q">
                                <span class="input-group-btn">
                                    <button id="searchId" class="btn btn-primary"><i class=" glyphicon glyphicon-search"></i></button>
                                </span>
                            </div>
                            <div class="hover-container" hidden="hidden">
                                <div id="SearchFilter" class="search-advanced small-text align-left" style="display: none;">
                                    <b>Search within:<br></b>
                                    <br />
                                    <input type="radio" id="sb_kw" name="sbo" value="0" checked="checked"><label for="sb_kw">PlayBook</label><br>
                                    <input type="radio" id="sb_qa" name="sbo" value="1"><label for="sb_qa">Playbook Test</label><br>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div id="page-wrapper" class="container-fluid">
            @*<div class="row">
                    <div class="col-lg-12">
                        <div class="pull-right">
                            <div class="searchbar" style="margin-top: 15px; margin-bottom: 15px;">

                                <table border="0" cellspacing="0" cellpadding="0" class="search">
                                    <tbody>
                                    <tr>
                                        <td>
                                            <input tabindex="-1" class="form-control" id="sb_tb" value="" name="q">
                                        </td>
                                        <td>
                                            <span id="searchId" style="margin-left: 5px;" class=" glyphicon glyphicon-search" data-toggle="modal" data-target=""></span>
                                        </td>
                                    </tr>
                                    </tbody>
                                </table>
                                <div class="hover-container" hidden="hidden">
                                    <div id="SearchFilter" class="search-advanced small-text align-left" style="display: none;">
                                        <b>Search within:<br></b>
                                        <br/>
                                        <input type="radio" id="sb_kw" name="sbo" value="0" checked="checked"><label for="sb_kw">PlayBook</label><br>
                                        <input type="radio" id="sb_qa" name="sbo" value="1"><label for="sb_qa">Playbook Test</label><br>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
            <br />
            @RenderBody()
        </div>

        @if (Session["ShowSurveyModal"] != null && Convert.ToBoolean(Session["ShowSurveyModal"]))
        {
            @Html.Partial("CustomerUserSurvey", new CustomerSurveyDetailViewModel())
        }
        @if (Session["ShowTestFeedbackModal"] != null && Convert.ToBoolean(Session["ShowTestFeedbackModal"]))
        {
            @Html.Partial("CustomerTestFeedback", new FeedbackViewModel() { Type = Domain.Customer.Models.Feedback.FeedbackType.Test, Subject = Session["TrainingTestReferenceId"].ToString() })
        }
    </div>
    <footer>

        <div class="navbar navbar-default navbar-bottom-custom">
        </div>
        <p class="hidden-xs" style="position: absolute">
            <a href="@Href("~/")">
                <img src="@footerLogoUrl" style="width: 180px; margin-left: 15px;" />

            </a>
        </p>
        <p class="pull-right navbar-bottom-wording-custom" style="display: inline;">Powered by OnRamp &copy;@DateTime.Now.Year <br> @version</p>
    </footer>
    <div class="modal fade" id="mySearchModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header modalSearch">
                    <button type="button" class="close" data-dismiss="" id="btnClose">
                        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                    </button>
                    <h4 class="modal-title">Global Search</h4>
                </div>
                <div class="modal-body">
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="myLegalDisclaimerModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header modalSearch ">
                    <h4 class="modal-title">Disclaimer</h4>
                </div>
                <div class="modal-body">
                    @if (PortalContext.Current != null && PortalContext.Current.UserCompany != null && !string.IsNullOrWhiteSpace(PortalContext.Current.UserCompany.LegalDisclaimer))
                    {
                        @Html.TextAreaFor(m => PortalContext.Current.UserCompany.LegalDisclaimer, new { @class = "form-control", @style = "max-width:none", rows = 20, @readonly = "" })
                    }
                </div>
                <div class="modal-footer">
                    <div class="text-right">
                        <div class="btn-group">
                            <button type="button" id="accept-disclaimer" class="btn btn-primary">Accept</button>
                            <button type="button" id="do-not-accept-disclaimer" class="btn btn-default">Do Not Accept</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="timeout" role="dialog" aria-labelledby="timeoutModelLabel" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header modalSearch">
                    <h4 class="modal-title">Session Timeout</h4>
                </div>
                <div class="modal-body">
                    <p>@Ramp.Services.Helpers.StringExtensions.GetFirstName(Thread.CurrentPrincipal.GetGivenName()), are you still here?</p>
                </div>
                <div class="modal-footer">
                    <div class="text-center">
                        <div class="btn-group">
                            <button class="btn btn-primary" id="timeout_keepAlive">Keep Me Logged In</button>
                            <button class="btn btn-default" id="timeout_logOut">Log Me Out <span class="glyphicon glyphicon-time"></span><span id="timeout_remainingSeconds"></span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="myProfileModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header modal-header-custom">
                    <button type="button" class="close CssClose" id="btnMyProfileModalClose" data-dismiss=""><span aria-hidden="true">&times;</span><span data-dismiss="" class="sr-only">Close</span></button>
                    <h4 class="modal-title">Edit My Profile</h4>
                </div>
                <div class="modal-body" id="divMyProfile">

                </div>

            </div>
        </div>
    </div>


    <div class="modal fade" id="feedbackModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header modal-header-custom">
                    <a href="javascript:void(0)" data-dismiss="" class="close" onclick="javascript: closeFeedbackModal()"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></a>
                    <h4 class="modal-title">OnRamp Feedback</h4>
                </div>
                <div class="modal-body" id="divFeedback">

                </div>

            </div>
        </div>
    </div>
</body>
</html>
<script>
    function closeProfileModal() {

        $('#myProfileModal').modal('hide');
        $("#liMeetingReport").click(function () {

            alert(14);
        });

    }
</script>